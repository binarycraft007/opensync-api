/*
 * plume-customer
 *
 * Customer APIs for NOC, IOS, Android, QA scripts, and www.plume.com
 *
 * API version: 1.109.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"time"
)

// Plume internal-only APIs.
type Location struct {
	Id *ObjectId `json:"id,omitempty"`
	// Configuration data for IPv6
	Ipv6 interface{} `json:"ipv6,omitempty"`
	// the default value is 'auto', users can choose 'router' or 'auto'
	NetworkMode string `json:"networkMode,omitempty"`
	Name string `json:"name"`
	// accountId from customer relation; this should be a replica of the customer's accountId field
	AccountId string `json:"accountId,omitempty"`
	// partnerId from customer relation; this should be a replica of the customer's partnerId field
	PartnerId string `json:"partnerId,omitempty"`
	// List of group IDs a location belongs to.
	GroupIds []string `json:"groupIds,omitempty"`
	ServiceId string `json:"serviceId,omitempty"`
	Profile string `json:"profile,omitempty"`
	MDNSUniqueIdentifier string `json:"mDNSUniqueIdentifier,omitempty"`
	FreezeTemplates interface{} `json:"freezeTemplates,omitempty"`
	// including 'status'/'created'/'updatedAt', 'status' can be 'noService'/'basicService'/'fullService'
	ServiceLevel interface{} `json:"serviceLevel,omitempty"`
	// Home Security wifi motion will be enabled when all persons away from home.
	HomeAwayActive bool `json:"homeAwayActive,omitempty"`
	// location's default appTime config
	AppTime interface{} `json:"appTime,omitempty"`
	// location's default sniffing config
	Sniffing interface{} `json:"sniffing,omitempty"`
	CreatedAt time.Time `json:"createdAt,omitempty"`
	UpdatedAt time.Time `json:"updatedAt,omitempty"`
	DayOneEmailsSent bool `json:"dayOneEmailsSent,omitempty"`
	Region string `json:"region,omitempty"`
	// Array of step function timers used for turning off wifi feature
	StepFunctionTimers []interface{} `json:"stepFunctionTimers,omitempty"`
	// schema version # of a Mongo document
	Version string `json:"_version"`
	GroupOfUnassignedDevicesFreezeTemplates []XAny `json:"groupOfUnassignedDevicesFreezeTemplates,omitempty"`
	GroupOfUnassignedDevicesFreezeSchedules []XAny `json:"groupOfUnassignedDevicesFreezeSchedules,omitempty"`
	IsUtilizingSharedLocationFreezeSchedules bool `json:"isUtilizingSharedLocationFreezeSchedules,omitempty"`
	Uprise bool `json:"uprise,omitempty"`
	Flex bool `json:"flex,omitempty"`
	CustomerId *ObjectId `json:"customerId,omitempty"`
	IspSpeedTestConfiguration *LocationSpeedTest `json:"ispSpeedTestConfiguration,omitempty"`
	BandSteering *LocationBandSteering `json:"bandSteering,omitempty"`
	ClientSteering *LocationClientSteering `json:"clientSteering,omitempty"`
	ControlMode *LocationControlMode `json:"controlMode,omitempty"`
	MonitorMode *LocationMonitorMode `json:"monitorMode,omitempty"`
	Backhaul *LocationBackhaul `json:"backhaul,omitempty"`
	WanSettings *LocationWanSettings `json:"wanSettings,omitempty"`
	WifiMotion *WifiMotion `json:"wifiMotion,omitempty"`
	GeoIp *GeoIp `json:"geoIp,omitempty"`
	NetworkStatus *NetworkStatus `json:"networkStatus,omitempty"`
	Optimizations *Optimizations `json:"optimizations,omitempty"`
	Authorizations *Authorizations `json:"authorizations,omitempty"`
	Locale *Locale `json:"locale,omitempty"`
	NetworkAccess *NetworkAccess `json:"networkAccess,omitempty"`
	DppConfiguration *DppConfiguration `json:"dppConfiguration,omitempty"`
	HaahsConfiguration *HaahsConfiguration `json:"haahsConfiguration,omitempty"`
	SecondaryNetworks *SecondaryNetworks `json:"_secondaryNetworks,omitempty"`
}
