// Code generated by go-swagger; DO NOT EDIT.

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// NodePrototypeVerifyEmailPasswordlessTokenReader is a Reader for the NodePrototypeVerifyEmailPasswordlessToken structure.
type NodePrototypeVerifyEmailPasswordlessTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodePrototypeVerifyEmailPasswordlessTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodePrototypeVerifyEmailPasswordlessTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNodePrototypeVerifyEmailPasswordlessTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodePrototypeVerifyEmailPasswordlessTokenOK creates a NodePrototypeVerifyEmailPasswordlessTokenOK with default headers values
func NewNodePrototypeVerifyEmailPasswordlessTokenOK() *NodePrototypeVerifyEmailPasswordlessTokenOK {
	return &NodePrototypeVerifyEmailPasswordlessTokenOK{}
}

/*
NodePrototypeVerifyEmailPasswordlessTokenOK describes a response with status code 200, with default header values.

Request was successful
*/
type NodePrototypeVerifyEmailPasswordlessTokenOK struct {
	Payload *models.Customer
}

// IsSuccess returns true when this node prototype verify email passwordless token o k response has a 2xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this node prototype verify email passwordless token o k response has a 3xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node prototype verify email passwordless token o k response has a 4xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this node prototype verify email passwordless token o k response has a 5xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this node prototype verify email passwordless token o k response a status code equal to that given
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the node prototype verify email passwordless token o k response
func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) Code() int {
	return 200
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) Error() string {
	return fmt.Sprintf("[POST /Nodes/{id}/passwordLessToken][%d] nodePrototypeVerifyEmailPasswordlessTokenOK  %+v", 200, o.Payload)
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) String() string {
	return fmt.Sprintf("[POST /Nodes/{id}/passwordLessToken][%d] nodePrototypeVerifyEmailPasswordlessTokenOK  %+v", 200, o.Payload)
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) GetPayload() *models.Customer {
	return o.Payload
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodePrototypeVerifyEmailPasswordlessTokenDefault creates a NodePrototypeVerifyEmailPasswordlessTokenDefault with default headers values
func NewNodePrototypeVerifyEmailPasswordlessTokenDefault(code int) *NodePrototypeVerifyEmailPasswordlessTokenDefault {
	return &NodePrototypeVerifyEmailPasswordlessTokenDefault{
		_statusCode: code,
	}
}

/*
NodePrototypeVerifyEmailPasswordlessTokenDefault describes a response with status code -1, with default header values.

unexpected error
*/
type NodePrototypeVerifyEmailPasswordlessTokenDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this node prototype verify email passwordless token default response has a 2xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this node prototype verify email passwordless token default response has a 3xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this node prototype verify email passwordless token default response has a 4xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this node prototype verify email passwordless token default response has a 5xx status code
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this node prototype verify email passwordless token default response a status code equal to that given
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the node prototype verify email passwordless token default response
func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) Code() int {
	return o._statusCode
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) Error() string {
	return fmt.Sprintf("[POST /Nodes/{id}/passwordLessToken][%d] Node.prototype.verifyEmailPasswordlessToken default  %+v", o._statusCode, o.Payload)
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) String() string {
	return fmt.Sprintf("[POST /Nodes/{id}/passwordLessToken][%d] Node.prototype.verifyEmailPasswordlessToken default  %+v", o._statusCode, o.Payload)
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *NodePrototypeVerifyEmailPasswordlessTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
