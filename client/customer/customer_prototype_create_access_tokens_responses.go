// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypeCreateAccessTokensReader is a Reader for the CustomerPrototypeCreateAccessTokens structure.
type CustomerPrototypeCreateAccessTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypeCreateAccessTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypeCreateAccessTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypeCreateAccessTokensDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypeCreateAccessTokensOK creates a CustomerPrototypeCreateAccessTokensOK with default headers values
func NewCustomerPrototypeCreateAccessTokensOK() *CustomerPrototypeCreateAccessTokensOK {
	return &CustomerPrototypeCreateAccessTokensOK{}
}

/*
CustomerPrototypeCreateAccessTokensOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypeCreateAccessTokensOK struct {
	Payload *models.AccessToken
}

// IsSuccess returns true when this customer prototype create access tokens o k response has a 2xx status code
func (o *CustomerPrototypeCreateAccessTokensOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype create access tokens o k response has a 3xx status code
func (o *CustomerPrototypeCreateAccessTokensOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype create access tokens o k response has a 4xx status code
func (o *CustomerPrototypeCreateAccessTokensOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype create access tokens o k response has a 5xx status code
func (o *CustomerPrototypeCreateAccessTokensOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype create access tokens o k response a status code equal to that given
func (o *CustomerPrototypeCreateAccessTokensOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype create access tokens o k response
func (o *CustomerPrototypeCreateAccessTokensOK) Code() int {
	return 200
}

func (o *CustomerPrototypeCreateAccessTokensOK) Error() string {
	return fmt.Sprintf("[POST /Customers/{id}/accessTokens][%d] customerPrototypeCreateAccessTokensOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeCreateAccessTokensOK) String() string {
	return fmt.Sprintf("[POST /Customers/{id}/accessTokens][%d] customerPrototypeCreateAccessTokensOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeCreateAccessTokensOK) GetPayload() *models.AccessToken {
	return o.Payload
}

func (o *CustomerPrototypeCreateAccessTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypeCreateAccessTokensDefault creates a CustomerPrototypeCreateAccessTokensDefault with default headers values
func NewCustomerPrototypeCreateAccessTokensDefault(code int) *CustomerPrototypeCreateAccessTokensDefault {
	return &CustomerPrototypeCreateAccessTokensDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypeCreateAccessTokensDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypeCreateAccessTokensDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype create access tokens default response has a 2xx status code
func (o *CustomerPrototypeCreateAccessTokensDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype create access tokens default response has a 3xx status code
func (o *CustomerPrototypeCreateAccessTokensDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype create access tokens default response has a 4xx status code
func (o *CustomerPrototypeCreateAccessTokensDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype create access tokens default response has a 5xx status code
func (o *CustomerPrototypeCreateAccessTokensDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype create access tokens default response a status code equal to that given
func (o *CustomerPrototypeCreateAccessTokensDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype create access tokens default response
func (o *CustomerPrototypeCreateAccessTokensDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypeCreateAccessTokensDefault) Error() string {
	return fmt.Sprintf("[POST /Customers/{id}/accessTokens][%d] Customer.prototype.__create__accessTokens default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeCreateAccessTokensDefault) String() string {
	return fmt.Sprintf("[POST /Customers/{id}/accessTokens][%d] Customer.prototype.__create__accessTokens default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeCreateAccessTokensDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypeCreateAccessTokensDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
