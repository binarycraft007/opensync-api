// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams creates a new CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams() *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	return &CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithTimeout creates a new CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithTimeout(timeout time.Duration) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	return &CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithContext creates a new CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithContext(ctx context.Context) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	return &CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithHTTPClient creates a new CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParamsWithHTTPClient(client *http.Client) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	return &CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams contains all the parameters to send to the API endpoint

	for the customer prototype put authorizations put customers id locations location Id node authorizations operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams struct {

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	/* NumNodesAuthorized.

	   number of leaf pods grouped by model id that are authorized to be claimed and be a part of the Plume network

	   Format: JSON
	*/
	NumNodesAuthorized *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype put authorizations put customers id locations location Id node authorizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithDefaults() *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype put authorizations put customers id locations location Id node authorizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithTimeout(timeout time.Duration) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithContext(ctx context.Context) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithHTTPClient(client *http.Client) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithID(id string) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithLocationID(locationID string) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithNumNodesAuthorized adds the numNodesAuthorized to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WithNumNodesAuthorized(numNodesAuthorized *string) *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams {
	o.SetNumNodesAuthorized(numNodesAuthorized)
	return o
}

// SetNumNodesAuthorized adds the numNodesAuthorized to the customer prototype put authorizations put customers id locations location Id node authorizations params
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) SetNumNodesAuthorized(numNodesAuthorized *string) {
	o.NumNodesAuthorized = numNodesAuthorized
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePutAuthorizationsPutCustomersIDLocationsLocationIDNodeAuthorizationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.NumNodesAuthorized != nil {

		// form param numNodesAuthorized
		var frNumNodesAuthorized string
		if o.NumNodesAuthorized != nil {
			frNumNodesAuthorized = *o.NumNodesAuthorized
		}
		fNumNodesAuthorized := frNumNodesAuthorized
		if fNumNodesAuthorized != "" {
			if err := r.SetFormParam("numNodesAuthorized", fNumNodesAuthorized); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
