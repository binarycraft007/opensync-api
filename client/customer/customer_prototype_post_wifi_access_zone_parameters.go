// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePostWifiAccessZoneParams creates a new CustomerPrototypePostWifiAccessZoneParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePostWifiAccessZoneParams() *CustomerPrototypePostWifiAccessZoneParams {
	return &CustomerPrototypePostWifiAccessZoneParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePostWifiAccessZoneParamsWithTimeout creates a new CustomerPrototypePostWifiAccessZoneParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePostWifiAccessZoneParamsWithTimeout(timeout time.Duration) *CustomerPrototypePostWifiAccessZoneParams {
	return &CustomerPrototypePostWifiAccessZoneParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePostWifiAccessZoneParamsWithContext creates a new CustomerPrototypePostWifiAccessZoneParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePostWifiAccessZoneParamsWithContext(ctx context.Context) *CustomerPrototypePostWifiAccessZoneParams {
	return &CustomerPrototypePostWifiAccessZoneParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePostWifiAccessZoneParamsWithHTTPClient creates a new CustomerPrototypePostWifiAccessZoneParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePostWifiAccessZoneParamsWithHTTPClient(client *http.Client) *CustomerPrototypePostWifiAccessZoneParams {
	return &CustomerPrototypePostWifiAccessZoneParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePostWifiAccessZoneParams contains all the parameters to send to the API endpoint

	for the customer prototype post wifi access zone operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePostWifiAccessZoneParams struct {

	/* AccessibleDevices.

	   macs of home devices visible to this guest access zone

	   Format: JSON
	*/
	AccessibleDevices *string

	/* Description.

	   name of access zone
	*/
	Description string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	//
	// Format: JSON
	LocationID string

	/* Type.

	   for now, must be 'guests'
	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype post wifi access zone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostWifiAccessZoneParams) WithDefaults() *CustomerPrototypePostWifiAccessZoneParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype post wifi access zone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostWifiAccessZoneParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithTimeout(timeout time.Duration) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithContext(ctx context.Context) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithHTTPClient(client *http.Client) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessibleDevices adds the accessibleDevices to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithAccessibleDevices(accessibleDevices *string) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetAccessibleDevices(accessibleDevices)
	return o
}

// SetAccessibleDevices adds the accessibleDevices to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetAccessibleDevices(accessibleDevices *string) {
	o.AccessibleDevices = accessibleDevices
}

// WithDescription adds the description to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithDescription(description string) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetDescription(description string) {
	o.Description = description
}

// WithID adds the id to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithID(id string) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithLocationID(locationID string) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithType adds the typeVar to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) WithType(typeVar string) *CustomerPrototypePostWifiAccessZoneParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the customer prototype post wifi access zone params
func (o *CustomerPrototypePostWifiAccessZoneParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePostWifiAccessZoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessibleDevices != nil {

		// form param accessibleDevices
		var frAccessibleDevices string
		if o.AccessibleDevices != nil {
			frAccessibleDevices = *o.AccessibleDevices
		}
		fAccessibleDevices := frAccessibleDevices
		if fAccessibleDevices != "" {
			if err := r.SetFormParam("accessibleDevices", fAccessibleDevices); err != nil {
				return err
			}
		}
	}

	// form param description
	frDescription := o.Description
	fDescription := frDescription
	if fDescription != "" {
		if err := r.SetFormParam("description", fDescription); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// form param type
	frType := o.Type
	fType := frType
	if fType != "" {
		if err := r.SetFormParam("type", fType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
