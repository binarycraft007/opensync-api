// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypeGetNodesReader is a Reader for the CustomerPrototypeGetNodes structure.
type CustomerPrototypeGetNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypeGetNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypeGetNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypeGetNodesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypeGetNodesOK creates a CustomerPrototypeGetNodesOK with default headers values
func NewCustomerPrototypeGetNodesOK() *CustomerPrototypeGetNodesOK {
	return &CustomerPrototypeGetNodesOK{}
}

/*
CustomerPrototypeGetNodesOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypeGetNodesOK struct {
	Payload *CustomerPrototypeGetNodesOKBody
}

// IsSuccess returns true when this customer prototype get nodes o k response has a 2xx status code
func (o *CustomerPrototypeGetNodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype get nodes o k response has a 3xx status code
func (o *CustomerPrototypeGetNodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype get nodes o k response has a 4xx status code
func (o *CustomerPrototypeGetNodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype get nodes o k response has a 5xx status code
func (o *CustomerPrototypeGetNodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype get nodes o k response a status code equal to that given
func (o *CustomerPrototypeGetNodesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype get nodes o k response
func (o *CustomerPrototypeGetNodesOK) Code() int {
	return 200
}

func (o *CustomerPrototypeGetNodesOK) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/nodes][%d] customerPrototypeGetNodesOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetNodesOK) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/nodes][%d] customerPrototypeGetNodesOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetNodesOK) GetPayload() *CustomerPrototypeGetNodesOKBody {
	return o.Payload
}

func (o *CustomerPrototypeGetNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CustomerPrototypeGetNodesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypeGetNodesDefault creates a CustomerPrototypeGetNodesDefault with default headers values
func NewCustomerPrototypeGetNodesDefault(code int) *CustomerPrototypeGetNodesDefault {
	return &CustomerPrototypeGetNodesDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypeGetNodesDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypeGetNodesDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype get nodes default response has a 2xx status code
func (o *CustomerPrototypeGetNodesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype get nodes default response has a 3xx status code
func (o *CustomerPrototypeGetNodesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype get nodes default response has a 4xx status code
func (o *CustomerPrototypeGetNodesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype get nodes default response has a 5xx status code
func (o *CustomerPrototypeGetNodesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype get nodes default response a status code equal to that given
func (o *CustomerPrototypeGetNodesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype get nodes default response
func (o *CustomerPrototypeGetNodesDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypeGetNodesDefault) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/nodes][%d] Customer.prototype.getNodes default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetNodesDefault) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/nodes][%d] Customer.prototype.getNodes default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetNodesDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypeGetNodesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CustomerPrototypeGetNodesOKBody customer prototype get nodes o k body
swagger:model CustomerPrototypeGetNodesOKBody
*/
type CustomerPrototypeGetNodesOKBody struct {

	// nodes
	Nodes *models.NodeResponses `json:"nodes,omitempty"`
}

// Validate validates this customer prototype get nodes o k body
func (o *CustomerPrototypeGetNodesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNodes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypeGetNodesOKBody) validateNodes(formats strfmt.Registry) error {
	if swag.IsZero(o.Nodes) { // not required
		return nil
	}

	if o.Nodes != nil {
		if err := o.Nodes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypeGetNodesOK" + "." + "nodes")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypeGetNodesOK" + "." + "nodes")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this customer prototype get nodes o k body based on the context it is used
func (o *CustomerPrototypeGetNodesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateNodes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypeGetNodesOKBody) contextValidateNodes(ctx context.Context, formats strfmt.Registry) error {

	if o.Nodes != nil {
		if err := o.Nodes.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypeGetNodesOK" + "." + "nodes")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypeGetNodesOK" + "." + "nodes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CustomerPrototypeGetNodesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomerPrototypeGetNodesOKBody) UnmarshalBinary(b []byte) error {
	var res CustomerPrototypeGetNodesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
