// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePatchIPV6Params creates a new CustomerPrototypePatchIPV6Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePatchIPV6Params() *CustomerPrototypePatchIPV6Params {
	return &CustomerPrototypePatchIPV6Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePatchIPV6ParamsWithTimeout creates a new CustomerPrototypePatchIPV6Params object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePatchIPV6ParamsWithTimeout(timeout time.Duration) *CustomerPrototypePatchIPV6Params {
	return &CustomerPrototypePatchIPV6Params{
		timeout: timeout,
	}
}

// NewCustomerPrototypePatchIPV6ParamsWithContext creates a new CustomerPrototypePatchIPV6Params object
// with the ability to set a context for a request.
func NewCustomerPrototypePatchIPV6ParamsWithContext(ctx context.Context) *CustomerPrototypePatchIPV6Params {
	return &CustomerPrototypePatchIPV6Params{
		Context: ctx,
	}
}

// NewCustomerPrototypePatchIPV6ParamsWithHTTPClient creates a new CustomerPrototypePatchIPV6Params object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePatchIPV6ParamsWithHTTPClient(client *http.Client) *CustomerPrototypePatchIPV6Params {
	return &CustomerPrototypePatchIPV6Params{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePatchIPV6Params contains all the parameters to send to the API endpoint

	for the customer prototype patch IPv6 operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePatchIPV6Params struct {

	// AddressingConfig.
	AddressingConfig *string

	// DNS.
	//
	// Format: JSON
	DNS *string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// Mode.
	Mode *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype patch IPv6 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchIPV6Params) WithDefaults() *CustomerPrototypePatchIPV6Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype patch IPv6 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchIPV6Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithTimeout(timeout time.Duration) *CustomerPrototypePatchIPV6Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithContext(ctx context.Context) *CustomerPrototypePatchIPV6Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithHTTPClient(client *http.Client) *CustomerPrototypePatchIPV6Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddressingConfig adds the addressingConfig to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithAddressingConfig(addressingConfig *string) *CustomerPrototypePatchIPV6Params {
	o.SetAddressingConfig(addressingConfig)
	return o
}

// SetAddressingConfig adds the addressingConfig to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetAddressingConfig(addressingConfig *string) {
	o.AddressingConfig = addressingConfig
}

// WithDNS adds the dns to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithDNS(dns *string) *CustomerPrototypePatchIPV6Params {
	o.SetDNS(dns)
	return o
}

// SetDNS adds the dns to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetDNS(dns *string) {
	o.DNS = dns
}

// WithID adds the id to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithID(id string) *CustomerPrototypePatchIPV6Params {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithLocationID(locationID string) *CustomerPrototypePatchIPV6Params {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithMode adds the mode to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) WithMode(mode *string) *CustomerPrototypePatchIPV6Params {
	o.SetMode(mode)
	return o
}

// SetMode adds the mode to the customer prototype patch IPv6 params
func (o *CustomerPrototypePatchIPV6Params) SetMode(mode *string) {
	o.Mode = mode
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePatchIPV6Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddressingConfig != nil {

		// form param addressingConfig
		var frAddressingConfig string
		if o.AddressingConfig != nil {
			frAddressingConfig = *o.AddressingConfig
		}
		fAddressingConfig := frAddressingConfig
		if fAddressingConfig != "" {
			if err := r.SetFormParam("addressingConfig", fAddressingConfig); err != nil {
				return err
			}
		}
	}

	if o.DNS != nil {

		// form param dns
		var frDNS string
		if o.DNS != nil {
			frDNS = *o.DNS
		}
		fDNS := frDNS
		if fDNS != "" {
			if err := r.SetFormParam("dns", fDNS); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.Mode != nil {

		// form param mode
		var frMode string
		if o.Mode != nil {
			frMode = *o.Mode
		}
		fMode := frMode
		if fMode != "" {
			if err := r.SetFormParam("mode", fMode); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
