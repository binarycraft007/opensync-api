// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams creates a new CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams() *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	return &CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithTimeout creates a new CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithTimeout(timeout time.Duration) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	return &CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithContext creates a new CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithContext(ctx context.Context) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	return &CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithHTTPClient creates a new CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParamsWithHTTPClient(client *http.Client) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	return &CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams contains all the parameters to send to the API endpoint

	for the customer prototype post device security policy anomaly whitelist operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams struct {

	// Fqdn.
	Fqdn string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// Mac.
	Mac string

	// Reason.
	//
	// Default: "trust"
	Reason *string

	// TTL.
	//
	// Format: double
	TTL *float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype post device security policy anomaly whitelist params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithDefaults() *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype post device security policy anomaly whitelist params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetDefaults() {
	var (
		reasonDefault = string("trust")
	)

	val := CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams{
		Reason: &reasonDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithTimeout(timeout time.Duration) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithContext(ctx context.Context) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithHTTPClient(client *http.Client) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFqdn adds the fqdn to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithFqdn(fqdn string) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetFqdn(fqdn)
	return o
}

// SetFqdn adds the fqdn to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetFqdn(fqdn string) {
	o.Fqdn = fqdn
}

// WithID adds the id to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithID(id string) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithLocationID(locationID string) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithMac adds the mac to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithMac(mac string) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetMac(mac)
	return o
}

// SetMac adds the mac to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetMac(mac string) {
	o.Mac = mac
}

// WithReason adds the reason to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithReason(reason *string) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetReason(reason)
	return o
}

// SetReason adds the reason to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetReason(reason *string) {
	o.Reason = reason
}

// WithTTL adds the ttl to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WithTTL(ttl *float64) *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams {
	o.SetTTL(ttl)
	return o
}

// SetTTL adds the ttl to the customer prototype post device security policy anomaly whitelist params
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) SetTTL(ttl *float64) {
	o.TTL = ttl
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePostDeviceSecurityPolicyAnomalyWhitelistParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param fqdn
	frFqdn := o.Fqdn
	fFqdn := frFqdn
	if fFqdn != "" {
		if err := r.SetFormParam("fqdn", fFqdn); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// path param mac
	if err := r.SetPathParam("mac", o.Mac); err != nil {
		return err
	}

	if o.Reason != nil {

		// form param reason
		var frReason string
		if o.Reason != nil {
			frReason = *o.Reason
		}
		fReason := frReason
		if fReason != "" {
			if err := r.SetFormParam("reason", fReason); err != nil {
				return err
			}
		}
	}

	if o.TTL != nil {

		// form param ttl
		var frTTL float64
		if o.TTL != nil {
			frTTL = *o.TTL
		}
		fTTL := swag.FormatFloat64(frTTL)
		if fTTL != "" {
			if err := r.SetFormParam("ttl", fTTL); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
