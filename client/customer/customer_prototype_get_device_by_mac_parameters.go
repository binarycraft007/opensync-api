// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypeGetDeviceByMacParams creates a new CustomerPrototypeGetDeviceByMacParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypeGetDeviceByMacParams() *CustomerPrototypeGetDeviceByMacParams {
	return &CustomerPrototypeGetDeviceByMacParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypeGetDeviceByMacParamsWithTimeout creates a new CustomerPrototypeGetDeviceByMacParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypeGetDeviceByMacParamsWithTimeout(timeout time.Duration) *CustomerPrototypeGetDeviceByMacParams {
	return &CustomerPrototypeGetDeviceByMacParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypeGetDeviceByMacParamsWithContext creates a new CustomerPrototypeGetDeviceByMacParams object
// with the ability to set a context for a request.
func NewCustomerPrototypeGetDeviceByMacParamsWithContext(ctx context.Context) *CustomerPrototypeGetDeviceByMacParams {
	return &CustomerPrototypeGetDeviceByMacParams{
		Context: ctx,
	}
}

// NewCustomerPrototypeGetDeviceByMacParamsWithHTTPClient creates a new CustomerPrototypeGetDeviceByMacParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypeGetDeviceByMacParamsWithHTTPClient(client *http.Client) *CustomerPrototypeGetDeviceByMacParams {
	return &CustomerPrototypeGetDeviceByMacParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypeGetDeviceByMacParams contains all the parameters to send to the API endpoint

	for the customer prototype get device by mac operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypeGetDeviceByMacParams struct {

	/* DaysOffline.

	   exclude devices disconnected longer than daysOffline.

	   Format: double
	*/
	DaysOffline *float64

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	/* Include.

	   can be 'bandwidthData', 'chartsData' or both. None means 'bandwidthData' only.
	*/
	Include *string

	// LocationID.
	LocationID string

	/* Mac.

	   mac of device
	*/
	Mac string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype get device by mac params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDeviceByMacParams) WithDefaults() *CustomerPrototypeGetDeviceByMacParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype get device by mac params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDeviceByMacParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithTimeout(timeout time.Duration) *CustomerPrototypeGetDeviceByMacParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithContext(ctx context.Context) *CustomerPrototypeGetDeviceByMacParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithHTTPClient(client *http.Client) *CustomerPrototypeGetDeviceByMacParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDaysOffline adds the daysOffline to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithDaysOffline(daysOffline *float64) *CustomerPrototypeGetDeviceByMacParams {
	o.SetDaysOffline(daysOffline)
	return o
}

// SetDaysOffline adds the daysOffline to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetDaysOffline(daysOffline *float64) {
	o.DaysOffline = daysOffline
}

// WithID adds the id to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithID(id string) *CustomerPrototypeGetDeviceByMacParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetID(id string) {
	o.ID = id
}

// WithInclude adds the include to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithInclude(include *string) *CustomerPrototypeGetDeviceByMacParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetInclude(include *string) {
	o.Include = include
}

// WithLocationID adds the locationID to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithLocationID(locationID string) *CustomerPrototypeGetDeviceByMacParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithMac adds the mac to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) WithMac(mac string) *CustomerPrototypeGetDeviceByMacParams {
	o.SetMac(mac)
	return o
}

// SetMac adds the mac to the customer prototype get device by mac params
func (o *CustomerPrototypeGetDeviceByMacParams) SetMac(mac string) {
	o.Mac = mac
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypeGetDeviceByMacParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DaysOffline != nil {

		// query param daysOffline
		var qrDaysOffline float64

		if o.DaysOffline != nil {
			qrDaysOffline = *o.DaysOffline
		}
		qDaysOffline := swag.FormatFloat64(qrDaysOffline)
		if qDaysOffline != "" {

			if err := r.SetQueryParam("daysOffline", qDaysOffline); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Include != nil {

		// query param include
		var qrInclude string

		if o.Include != nil {
			qrInclude = *o.Include
		}
		qInclude := qrInclude
		if qInclude != "" {

			if err := r.SetQueryParam("include", qInclude); err != nil {
				return err
			}
		}
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// path param mac
	if err := r.SetPathParam("mac", o.Mac); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
