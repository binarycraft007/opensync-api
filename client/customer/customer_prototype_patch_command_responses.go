// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypePatchCommandReader is a Reader for the CustomerPrototypePatchCommand structure.
type CustomerPrototypePatchCommandReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypePatchCommandReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypePatchCommandOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypePatchCommandDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypePatchCommandOK creates a CustomerPrototypePatchCommandOK with default headers values
func NewCustomerPrototypePatchCommandOK() *CustomerPrototypePatchCommandOK {
	return &CustomerPrototypePatchCommandOK{}
}

/*
CustomerPrototypePatchCommandOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypePatchCommandOK struct {
}

// IsSuccess returns true when this customer prototype patch command o k response has a 2xx status code
func (o *CustomerPrototypePatchCommandOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype patch command o k response has a 3xx status code
func (o *CustomerPrototypePatchCommandOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype patch command o k response has a 4xx status code
func (o *CustomerPrototypePatchCommandOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype patch command o k response has a 5xx status code
func (o *CustomerPrototypePatchCommandOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype patch command o k response a status code equal to that given
func (o *CustomerPrototypePatchCommandOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype patch command o k response
func (o *CustomerPrototypePatchCommandOK) Code() int {
	return 200
}

func (o *CustomerPrototypePatchCommandOK) Error() string {
	return fmt.Sprintf("[PATCH /Customers/{id}/locations/{locationId}/command][%d] customerPrototypePatchCommandOK ", 200)
}

func (o *CustomerPrototypePatchCommandOK) String() string {
	return fmt.Sprintf("[PATCH /Customers/{id}/locations/{locationId}/command][%d] customerPrototypePatchCommandOK ", 200)
}

func (o *CustomerPrototypePatchCommandOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomerPrototypePatchCommandDefault creates a CustomerPrototypePatchCommandDefault with default headers values
func NewCustomerPrototypePatchCommandDefault(code int) *CustomerPrototypePatchCommandDefault {
	return &CustomerPrototypePatchCommandDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypePatchCommandDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypePatchCommandDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype patch command default response has a 2xx status code
func (o *CustomerPrototypePatchCommandDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype patch command default response has a 3xx status code
func (o *CustomerPrototypePatchCommandDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype patch command default response has a 4xx status code
func (o *CustomerPrototypePatchCommandDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype patch command default response has a 5xx status code
func (o *CustomerPrototypePatchCommandDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype patch command default response a status code equal to that given
func (o *CustomerPrototypePatchCommandDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype patch command default response
func (o *CustomerPrototypePatchCommandDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypePatchCommandDefault) Error() string {
	return fmt.Sprintf("[PATCH /Customers/{id}/locations/{locationId}/command][%d] Customer.prototype.patchCommand default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePatchCommandDefault) String() string {
	return fmt.Sprintf("[PATCH /Customers/{id}/locations/{locationId}/command][%d] Customer.prototype.patchCommand default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePatchCommandDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypePatchCommandDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
