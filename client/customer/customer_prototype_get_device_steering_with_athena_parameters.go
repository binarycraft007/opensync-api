// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypeGetDeviceSteeringWithAthenaParams creates a new CustomerPrototypeGetDeviceSteeringWithAthenaParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypeGetDeviceSteeringWithAthenaParams() *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	return &CustomerPrototypeGetDeviceSteeringWithAthenaParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithTimeout creates a new CustomerPrototypeGetDeviceSteeringWithAthenaParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithTimeout(timeout time.Duration) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	return &CustomerPrototypeGetDeviceSteeringWithAthenaParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithContext creates a new CustomerPrototypeGetDeviceSteeringWithAthenaParams object
// with the ability to set a context for a request.
func NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithContext(ctx context.Context) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	return &CustomerPrototypeGetDeviceSteeringWithAthenaParams{
		Context: ctx,
	}
}

// NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithHTTPClient creates a new CustomerPrototypeGetDeviceSteeringWithAthenaParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypeGetDeviceSteeringWithAthenaParamsWithHTTPClient(client *http.Client) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	return &CustomerPrototypeGetDeviceSteeringWithAthenaParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypeGetDeviceSteeringWithAthenaParams contains all the parameters to send to the API endpoint

	for the customer prototype get device steering with athena operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypeGetDeviceSteeringWithAthenaParams struct {

	/* EndAt.

	   find objects before this value
	*/
	EndAt *string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	/* Limit.

	   1000 max for deep:false and 10 max for deep:true

	   Format: double
	   Default: 10
	*/
	Limit *float64

	// LocationID.
	LocationID string

	// Mac.
	Mac string

	/* Order.

	   desc || asc

	   Default: "desc"
	*/
	Order *string

	/* StartAt.

	   find objects after this value
	*/
	StartAt *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype get device steering with athena params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithDefaults() *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype get device steering with athena params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetDefaults() {
	var (
		limitDefault = float64(10)

		orderDefault = string("desc")
	)

	val := CustomerPrototypeGetDeviceSteeringWithAthenaParams{
		Limit: &limitDefault,
		Order: &orderDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithTimeout(timeout time.Duration) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithContext(ctx context.Context) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithHTTPClient(client *http.Client) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndAt adds the endAt to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithEndAt(endAt *string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetEndAt(endAt)
	return o
}

// SetEndAt adds the endAt to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetEndAt(endAt *string) {
	o.EndAt = endAt
}

// WithID adds the id to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithID(id string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetID(id string) {
	o.ID = id
}

// WithLimit adds the limit to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithLimit(limit *float64) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetLimit(limit *float64) {
	o.Limit = limit
}

// WithLocationID adds the locationID to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithLocationID(locationID string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithMac adds the mac to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithMac(mac string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetMac(mac)
	return o
}

// SetMac adds the mac to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetMac(mac string) {
	o.Mac = mac
}

// WithOrder adds the order to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithOrder(order *string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetOrder(order *string) {
	o.Order = order
}

// WithStartAt adds the startAt to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WithStartAt(startAt *string) *CustomerPrototypeGetDeviceSteeringWithAthenaParams {
	o.SetStartAt(startAt)
	return o
}

// SetStartAt adds the startAt to the customer prototype get device steering with athena params
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) SetStartAt(startAt *string) {
	o.StartAt = startAt
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypeGetDeviceSteeringWithAthenaParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndAt != nil {

		// query param endAt
		var qrEndAt string

		if o.EndAt != nil {
			qrEndAt = *o.EndAt
		}
		qEndAt := qrEndAt
		if qEndAt != "" {

			if err := r.SetQueryParam("endAt", qEndAt); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit float64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatFloat64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// path param mac
	if err := r.SetPathParam("mac", o.Mac); err != nil {
		return err
	}

	if o.Order != nil {

		// query param order
		var qrOrder string

		if o.Order != nil {
			qrOrder = *o.Order
		}
		qOrder := qrOrder
		if qOrder != "" {

			if err := r.SetQueryParam("order", qOrder); err != nil {
				return err
			}
		}
	}

	if o.StartAt != nil {

		// query param startAt
		var qrStartAt string

		if o.StartAt != nil {
			qrStartAt = *o.StartAt
		}
		qStartAt := qrStartAt
		if qStartAt != "" {

			if err := r.SetQueryParam("startAt", qStartAt); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
