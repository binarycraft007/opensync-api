// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypePutLocationWanConfigurationParams creates a new CustomerPrototypePutLocationWanConfigurationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePutLocationWanConfigurationParams() *CustomerPrototypePutLocationWanConfigurationParams {
	return &CustomerPrototypePutLocationWanConfigurationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePutLocationWanConfigurationParamsWithTimeout creates a new CustomerPrototypePutLocationWanConfigurationParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePutLocationWanConfigurationParamsWithTimeout(timeout time.Duration) *CustomerPrototypePutLocationWanConfigurationParams {
	return &CustomerPrototypePutLocationWanConfigurationParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePutLocationWanConfigurationParamsWithContext creates a new CustomerPrototypePutLocationWanConfigurationParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePutLocationWanConfigurationParamsWithContext(ctx context.Context) *CustomerPrototypePutLocationWanConfigurationParams {
	return &CustomerPrototypePutLocationWanConfigurationParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePutLocationWanConfigurationParamsWithHTTPClient creates a new CustomerPrototypePutLocationWanConfigurationParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePutLocationWanConfigurationParamsWithHTTPClient(client *http.Client) *CustomerPrototypePutLocationWanConfigurationParams {
	return &CustomerPrototypePutLocationWanConfigurationParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePutLocationWanConfigurationParams contains all the parameters to send to the API endpoint

	for the customer prototype put location wan configuration operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePutLocationWanConfigurationParams struct {

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// Pppoe.
	//
	// Format: JSON
	Pppoe *string

	// PublishedWithBLE.
	PublishedWithBLE *bool

	// StaticIPV4.
	//
	// Format: JSON
	StaticIPV4 *string

	// Uplink.
	//
	// Format: JSON
	Uplink *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype put location wan configuration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithDefaults() *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype put location wan configuration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithTimeout(timeout time.Duration) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithContext(ctx context.Context) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithHTTPClient(client *http.Client) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithID(id string) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithLocationID(locationID string) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithPppoe adds the pppoe to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithPppoe(pppoe *string) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetPppoe(pppoe)
	return o
}

// SetPppoe adds the pppoe to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetPppoe(pppoe *string) {
	o.Pppoe = pppoe
}

// WithPublishedWithBLE adds the publishedWithBLE to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithPublishedWithBLE(publishedWithBLE *bool) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetPublishedWithBLE(publishedWithBLE)
	return o
}

// SetPublishedWithBLE adds the publishedWithBLE to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetPublishedWithBLE(publishedWithBLE *bool) {
	o.PublishedWithBLE = publishedWithBLE
}

// WithStaticIPV4 adds the staticIPV4 to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithStaticIPV4(staticIPV4 *string) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetStaticIPV4(staticIPV4)
	return o
}

// SetStaticIPV4 adds the staticIpv4 to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetStaticIPV4(staticIPV4 *string) {
	o.StaticIPV4 = staticIPV4
}

// WithUplink adds the uplink to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) WithUplink(uplink *string) *CustomerPrototypePutLocationWanConfigurationParams {
	o.SetUplink(uplink)
	return o
}

// SetUplink adds the uplink to the customer prototype put location wan configuration params
func (o *CustomerPrototypePutLocationWanConfigurationParams) SetUplink(uplink *string) {
	o.Uplink = uplink
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePutLocationWanConfigurationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.Pppoe != nil {

		// form param pppoe
		var frPppoe string
		if o.Pppoe != nil {
			frPppoe = *o.Pppoe
		}
		fPppoe := frPppoe
		if fPppoe != "" {
			if err := r.SetFormParam("pppoe", fPppoe); err != nil {
				return err
			}
		}
	}

	if o.PublishedWithBLE != nil {

		// form param publishedWithBLE
		var frPublishedWithBLE bool
		if o.PublishedWithBLE != nil {
			frPublishedWithBLE = *o.PublishedWithBLE
		}
		fPublishedWithBLE := swag.FormatBool(frPublishedWithBLE)
		if fPublishedWithBLE != "" {
			if err := r.SetFormParam("publishedWithBLE", fPublishedWithBLE); err != nil {
				return err
			}
		}
	}

	if o.StaticIPV4 != nil {

		// form param staticIPv4
		var frStaticIPV4 string
		if o.StaticIPV4 != nil {
			frStaticIPV4 = *o.StaticIPV4
		}
		fStaticIPV4 := frStaticIPV4
		if fStaticIPV4 != "" {
			if err := r.SetFormParam("staticIPv4", fStaticIPV4); err != nil {
				return err
			}
		}
	}

	if o.Uplink != nil {

		// form param uplink
		var frUplink string
		if o.Uplink != nil {
			frUplink = *o.Uplink
		}
		fUplink := frUplink
		if fUplink != "" {
			if err := r.SetFormParam("uplink", fUplink); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
