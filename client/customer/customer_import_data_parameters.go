// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerImportDataParams creates a new CustomerImportDataParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerImportDataParams() *CustomerImportDataParams {
	return &CustomerImportDataParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerImportDataParamsWithTimeout creates a new CustomerImportDataParams object
// with the ability to set a timeout on a request.
func NewCustomerImportDataParamsWithTimeout(timeout time.Duration) *CustomerImportDataParams {
	return &CustomerImportDataParams{
		timeout: timeout,
	}
}

// NewCustomerImportDataParamsWithContext creates a new CustomerImportDataParams object
// with the ability to set a context for a request.
func NewCustomerImportDataParamsWithContext(ctx context.Context) *CustomerImportDataParams {
	return &CustomerImportDataParams{
		Context: ctx,
	}
}

// NewCustomerImportDataParamsWithHTTPClient creates a new CustomerImportDataParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerImportDataParamsWithHTTPClient(client *http.Client) *CustomerImportDataParams {
	return &CustomerImportDataParams{
		HTTPClient: client,
	}
}

/*
CustomerImportDataParams contains all the parameters to send to the API endpoint

	for the customer import data operation.

	Typically these are written to a http.Request.
*/
type CustomerImportDataParams struct {

	// Data.
	//
	// Format: JSON
	Data string

	// MigratedFrom.
	MigratedFrom string

	// Reason.
	Reason string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer import data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerImportDataParams) WithDefaults() *CustomerImportDataParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer import data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerImportDataParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer import data params
func (o *CustomerImportDataParams) WithTimeout(timeout time.Duration) *CustomerImportDataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer import data params
func (o *CustomerImportDataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer import data params
func (o *CustomerImportDataParams) WithContext(ctx context.Context) *CustomerImportDataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer import data params
func (o *CustomerImportDataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer import data params
func (o *CustomerImportDataParams) WithHTTPClient(client *http.Client) *CustomerImportDataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer import data params
func (o *CustomerImportDataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the customer import data params
func (o *CustomerImportDataParams) WithData(data string) *CustomerImportDataParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the customer import data params
func (o *CustomerImportDataParams) SetData(data string) {
	o.Data = data
}

// WithMigratedFrom adds the migratedFrom to the customer import data params
func (o *CustomerImportDataParams) WithMigratedFrom(migratedFrom string) *CustomerImportDataParams {
	o.SetMigratedFrom(migratedFrom)
	return o
}

// SetMigratedFrom adds the migratedFrom to the customer import data params
func (o *CustomerImportDataParams) SetMigratedFrom(migratedFrom string) {
	o.MigratedFrom = migratedFrom
}

// WithReason adds the reason to the customer import data params
func (o *CustomerImportDataParams) WithReason(reason string) *CustomerImportDataParams {
	o.SetReason(reason)
	return o
}

// SetReason adds the reason to the customer import data params
func (o *CustomerImportDataParams) SetReason(reason string) {
	o.Reason = reason
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerImportDataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param data
	frData := o.Data
	fData := frData
	if fData != "" {
		if err := r.SetFormParam("data", fData); err != nil {
			return err
		}
	}

	// form param migratedFrom
	frMigratedFrom := o.MigratedFrom
	fMigratedFrom := frMigratedFrom
	if fMigratedFrom != "" {
		if err := r.SetFormParam("migratedFrom", fMigratedFrom); err != nil {
			return err
		}
	}

	// form param reason
	frReason := o.Reason
	fReason := frReason
	if fReason != "" {
		if err := r.SetFormParam("reason", fReason); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
