// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypeRemoveDeviceByMacReader is a Reader for the CustomerPrototypeRemoveDeviceByMac structure.
type CustomerPrototypeRemoveDeviceByMacReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypeRemoveDeviceByMacReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCustomerPrototypeRemoveDeviceByMacNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypeRemoveDeviceByMacDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypeRemoveDeviceByMacNoContent creates a CustomerPrototypeRemoveDeviceByMacNoContent with default headers values
func NewCustomerPrototypeRemoveDeviceByMacNoContent() *CustomerPrototypeRemoveDeviceByMacNoContent {
	return &CustomerPrototypeRemoveDeviceByMacNoContent{}
}

/*
CustomerPrototypeRemoveDeviceByMacNoContent describes a response with status code 204, with default header values.

Request was successful
*/
type CustomerPrototypeRemoveDeviceByMacNoContent struct {
}

// IsSuccess returns true when this customer prototype remove device by mac no content response has a 2xx status code
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype remove device by mac no content response has a 3xx status code
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype remove device by mac no content response has a 4xx status code
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype remove device by mac no content response has a 5xx status code
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype remove device by mac no content response a status code equal to that given
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the customer prototype remove device by mac no content response
func (o *CustomerPrototypeRemoveDeviceByMacNoContent) Code() int {
	return 204
}

func (o *CustomerPrototypeRemoveDeviceByMacNoContent) Error() string {
	return fmt.Sprintf("[DELETE /Customers/{id}/locations/{locationId}/devices/{mac}][%d] customerPrototypeRemoveDeviceByMacNoContent ", 204)
}

func (o *CustomerPrototypeRemoveDeviceByMacNoContent) String() string {
	return fmt.Sprintf("[DELETE /Customers/{id}/locations/{locationId}/devices/{mac}][%d] customerPrototypeRemoveDeviceByMacNoContent ", 204)
}

func (o *CustomerPrototypeRemoveDeviceByMacNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomerPrototypeRemoveDeviceByMacDefault creates a CustomerPrototypeRemoveDeviceByMacDefault with default headers values
func NewCustomerPrototypeRemoveDeviceByMacDefault(code int) *CustomerPrototypeRemoveDeviceByMacDefault {
	return &CustomerPrototypeRemoveDeviceByMacDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypeRemoveDeviceByMacDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypeRemoveDeviceByMacDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype remove device by mac default response has a 2xx status code
func (o *CustomerPrototypeRemoveDeviceByMacDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype remove device by mac default response has a 3xx status code
func (o *CustomerPrototypeRemoveDeviceByMacDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype remove device by mac default response has a 4xx status code
func (o *CustomerPrototypeRemoveDeviceByMacDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype remove device by mac default response has a 5xx status code
func (o *CustomerPrototypeRemoveDeviceByMacDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype remove device by mac default response a status code equal to that given
func (o *CustomerPrototypeRemoveDeviceByMacDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype remove device by mac default response
func (o *CustomerPrototypeRemoveDeviceByMacDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypeRemoveDeviceByMacDefault) Error() string {
	return fmt.Sprintf("[DELETE /Customers/{id}/locations/{locationId}/devices/{mac}][%d] Customer.prototype.removeDeviceByMac default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeRemoveDeviceByMacDefault) String() string {
	return fmt.Sprintf("[DELETE /Customers/{id}/locations/{locationId}/devices/{mac}][%d] Customer.prototype.removeDeviceByMac default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeRemoveDeviceByMacDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypeRemoveDeviceByMacDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
