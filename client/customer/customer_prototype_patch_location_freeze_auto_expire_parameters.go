// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePatchLocationFreezeAutoExpireParams creates a new CustomerPrototypePatchLocationFreezeAutoExpireParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePatchLocationFreezeAutoExpireParams() *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	return &CustomerPrototypePatchLocationFreezeAutoExpireParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithTimeout creates a new CustomerPrototypePatchLocationFreezeAutoExpireParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithTimeout(timeout time.Duration) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	return &CustomerPrototypePatchLocationFreezeAutoExpireParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithContext creates a new CustomerPrototypePatchLocationFreezeAutoExpireParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithContext(ctx context.Context) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	return &CustomerPrototypePatchLocationFreezeAutoExpireParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithHTTPClient creates a new CustomerPrototypePatchLocationFreezeAutoExpireParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePatchLocationFreezeAutoExpireParamsWithHTTPClient(client *http.Client) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	return &CustomerPrototypePatchLocationFreezeAutoExpireParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePatchLocationFreezeAutoExpireParams contains all the parameters to send to the API endpoint

	for the customer prototype patch location freeze auto expire operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePatchLocationFreezeAutoExpireParams struct {

	// ExpiresAt.
	ExpiresAt *string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// IncludedDeviceMacs.
	//
	// Format: JSON
	IncludedDeviceMacs *string

	// IncludedPersonIds.
	//
	// Format: JSON
	IncludedPersonIds *string

	// LocationID.
	LocationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype patch location freeze auto expire params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithDefaults() *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype patch location freeze auto expire params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithTimeout(timeout time.Duration) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithContext(ctx context.Context) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithHTTPClient(client *http.Client) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpiresAt adds the expiresAt to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithExpiresAt(expiresAt *string) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetExpiresAt(expiresAt)
	return o
}

// SetExpiresAt adds the expiresAt to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetExpiresAt(expiresAt *string) {
	o.ExpiresAt = expiresAt
}

// WithID adds the id to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithID(id string) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetID(id string) {
	o.ID = id
}

// WithIncludedDeviceMacs adds the includedDeviceMacs to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithIncludedDeviceMacs(includedDeviceMacs *string) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetIncludedDeviceMacs(includedDeviceMacs)
	return o
}

// SetIncludedDeviceMacs adds the includedDeviceMacs to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetIncludedDeviceMacs(includedDeviceMacs *string) {
	o.IncludedDeviceMacs = includedDeviceMacs
}

// WithIncludedPersonIds adds the includedPersonIds to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithIncludedPersonIds(includedPersonIds *string) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetIncludedPersonIds(includedPersonIds)
	return o
}

// SetIncludedPersonIds adds the includedPersonIds to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetIncludedPersonIds(includedPersonIds *string) {
	o.IncludedPersonIds = includedPersonIds
}

// WithLocationID adds the locationID to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WithLocationID(locationID string) *CustomerPrototypePatchLocationFreezeAutoExpireParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype patch location freeze auto expire params
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePatchLocationFreezeAutoExpireParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExpiresAt != nil {

		// form param expiresAt
		var frExpiresAt string
		if o.ExpiresAt != nil {
			frExpiresAt = *o.ExpiresAt
		}
		fExpiresAt := frExpiresAt
		if fExpiresAt != "" {
			if err := r.SetFormParam("expiresAt", fExpiresAt); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.IncludedDeviceMacs != nil {

		// form param includedDeviceMacs
		var frIncludedDeviceMacs string
		if o.IncludedDeviceMacs != nil {
			frIncludedDeviceMacs = *o.IncludedDeviceMacs
		}
		fIncludedDeviceMacs := frIncludedDeviceMacs
		if fIncludedDeviceMacs != "" {
			if err := r.SetFormParam("includedDeviceMacs", fIncludedDeviceMacs); err != nil {
				return err
			}
		}
	}

	if o.IncludedPersonIds != nil {

		// form param includedPersonIds
		var frIncludedPersonIds string
		if o.IncludedPersonIds != nil {
			frIncludedPersonIds = *o.IncludedPersonIds
		}
		fIncludedPersonIds := frIncludedPersonIds
		if fIncludedPersonIds != "" {
			if err := r.SetFormParam("includedPersonIds", fIncludedPersonIds); err != nil {
				return err
			}
		}
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
