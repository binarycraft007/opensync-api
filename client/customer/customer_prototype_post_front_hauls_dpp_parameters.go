// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypePostFrontHaulsDppParams creates a new CustomerPrototypePostFrontHaulsDppParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePostFrontHaulsDppParams() *CustomerPrototypePostFrontHaulsDppParams {
	return &CustomerPrototypePostFrontHaulsDppParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePostFrontHaulsDppParamsWithTimeout creates a new CustomerPrototypePostFrontHaulsDppParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePostFrontHaulsDppParamsWithTimeout(timeout time.Duration) *CustomerPrototypePostFrontHaulsDppParams {
	return &CustomerPrototypePostFrontHaulsDppParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePostFrontHaulsDppParamsWithContext creates a new CustomerPrototypePostFrontHaulsDppParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePostFrontHaulsDppParamsWithContext(ctx context.Context) *CustomerPrototypePostFrontHaulsDppParams {
	return &CustomerPrototypePostFrontHaulsDppParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePostFrontHaulsDppParamsWithHTTPClient creates a new CustomerPrototypePostFrontHaulsDppParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePostFrontHaulsDppParamsWithHTTPClient(client *http.Client) *CustomerPrototypePostFrontHaulsDppParams {
	return &CustomerPrototypePostFrontHaulsDppParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePostFrontHaulsDppParams contains all the parameters to send to the API endpoint

	for the customer prototype post front hauls dpp operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePostFrontHaulsDppParams struct {

	/* Curve.

	   one of predefined elliptic curves, - optional,  if missing in request default to prime256v1
	*/
	Curve *string

	/* Enabled.

	   should we configure dpp for this network - defaults to true
	*/
	Enabled *bool

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	//
	// Format: JSON
	LocationID string

	// NetworkID.
	NetworkID string

	/* PrivateKey.

	   privateKey, must also provide public part if present, optional
	*/
	PrivateKey *string

	/* PublicKey.

	   publicKey
	*/
	PublicKey *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype post front hauls dpp params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostFrontHaulsDppParams) WithDefaults() *CustomerPrototypePostFrontHaulsDppParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype post front hauls dpp params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostFrontHaulsDppParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithTimeout(timeout time.Duration) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithContext(ctx context.Context) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithHTTPClient(client *http.Client) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCurve adds the curve to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithCurve(curve *string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetCurve(curve)
	return o
}

// SetCurve adds the curve to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetCurve(curve *string) {
	o.Curve = curve
}

// WithEnabled adds the enabled to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithEnabled(enabled *bool) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetEnabled(enabled)
	return o
}

// SetEnabled adds the enabled to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetEnabled(enabled *bool) {
	o.Enabled = enabled
}

// WithID adds the id to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithID(id string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithLocationID(locationID string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithNetworkID adds the networkID to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithNetworkID(networkID string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithPrivateKey adds the privateKey to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithPrivateKey(privateKey *string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetPrivateKey(privateKey)
	return o
}

// SetPrivateKey adds the privateKey to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetPrivateKey(privateKey *string) {
	o.PrivateKey = privateKey
}

// WithPublicKey adds the publicKey to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) WithPublicKey(publicKey *string) *CustomerPrototypePostFrontHaulsDppParams {
	o.SetPublicKey(publicKey)
	return o
}

// SetPublicKey adds the publicKey to the customer prototype post front hauls dpp params
func (o *CustomerPrototypePostFrontHaulsDppParams) SetPublicKey(publicKey *string) {
	o.PublicKey = publicKey
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePostFrontHaulsDppParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Curve != nil {

		// form param curve
		var frCurve string
		if o.Curve != nil {
			frCurve = *o.Curve
		}
		fCurve := frCurve
		if fCurve != "" {
			if err := r.SetFormParam("curve", fCurve); err != nil {
				return err
			}
		}
	}

	if o.Enabled != nil {

		// form param enabled
		var frEnabled bool
		if o.Enabled != nil {
			frEnabled = *o.Enabled
		}
		fEnabled := swag.FormatBool(frEnabled)
		if fEnabled != "" {
			if err := r.SetFormParam("enabled", fEnabled); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if o.PrivateKey != nil {

		// form param privateKey
		var frPrivateKey string
		if o.PrivateKey != nil {
			frPrivateKey = *o.PrivateKey
		}
		fPrivateKey := frPrivateKey
		if fPrivateKey != "" {
			if err := r.SetFormParam("privateKey", fPrivateKey); err != nil {
				return err
			}
		}
	}

	if o.PublicKey != nil {

		// form param publicKey
		var frPublicKey string
		if o.PublicKey != nil {
			frPublicKey = *o.PublicKey
		}
		fPublicKey := frPublicKey
		if fPublicKey != "" {
			if err := r.SetFormParam("publicKey", fPublicKey); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
