// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypePostWifiNetworkReader is a Reader for the CustomerPrototypePostWifiNetwork structure.
type CustomerPrototypePostWifiNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypePostWifiNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypePostWifiNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypePostWifiNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypePostWifiNetworkOK creates a CustomerPrototypePostWifiNetworkOK with default headers values
func NewCustomerPrototypePostWifiNetworkOK() *CustomerPrototypePostWifiNetworkOK {
	return &CustomerPrototypePostWifiNetworkOK{}
}

/*
CustomerPrototypePostWifiNetworkOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypePostWifiNetworkOK struct {
	Payload *CustomerPrototypePostWifiNetworkOKBody
}

// IsSuccess returns true when this customer prototype post wifi network o k response has a 2xx status code
func (o *CustomerPrototypePostWifiNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype post wifi network o k response has a 3xx status code
func (o *CustomerPrototypePostWifiNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype post wifi network o k response has a 4xx status code
func (o *CustomerPrototypePostWifiNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype post wifi network o k response has a 5xx status code
func (o *CustomerPrototypePostWifiNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype post wifi network o k response a status code equal to that given
func (o *CustomerPrototypePostWifiNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype post wifi network o k response
func (o *CustomerPrototypePostWifiNetworkOK) Code() int {
	return 200
}

func (o *CustomerPrototypePostWifiNetworkOK) Error() string {
	return fmt.Sprintf("[POST /Customers/{id}/locations/{locationId}/wifiNetwork][%d] customerPrototypePostWifiNetworkOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePostWifiNetworkOK) String() string {
	return fmt.Sprintf("[POST /Customers/{id}/locations/{locationId}/wifiNetwork][%d] customerPrototypePostWifiNetworkOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePostWifiNetworkOK) GetPayload() *CustomerPrototypePostWifiNetworkOKBody {
	return o.Payload
}

func (o *CustomerPrototypePostWifiNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CustomerPrototypePostWifiNetworkOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypePostWifiNetworkDefault creates a CustomerPrototypePostWifiNetworkDefault with default headers values
func NewCustomerPrototypePostWifiNetworkDefault(code int) *CustomerPrototypePostWifiNetworkDefault {
	return &CustomerPrototypePostWifiNetworkDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypePostWifiNetworkDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypePostWifiNetworkDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype post wifi network default response has a 2xx status code
func (o *CustomerPrototypePostWifiNetworkDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype post wifi network default response has a 3xx status code
func (o *CustomerPrototypePostWifiNetworkDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype post wifi network default response has a 4xx status code
func (o *CustomerPrototypePostWifiNetworkDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype post wifi network default response has a 5xx status code
func (o *CustomerPrototypePostWifiNetworkDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype post wifi network default response a status code equal to that given
func (o *CustomerPrototypePostWifiNetworkDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype post wifi network default response
func (o *CustomerPrototypePostWifiNetworkDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypePostWifiNetworkDefault) Error() string {
	return fmt.Sprintf("[POST /Customers/{id}/locations/{locationId}/wifiNetwork][%d] Customer.prototype.postWifiNetwork default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePostWifiNetworkDefault) String() string {
	return fmt.Sprintf("[POST /Customers/{id}/locations/{locationId}/wifiNetwork][%d] Customer.prototype.postWifiNetwork default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePostWifiNetworkDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypePostWifiNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CustomerPrototypePostWifiNetworkOKBody customer prototype post wifi network o k body
swagger:model CustomerPrototypePostWifiNetworkOKBody
*/
type CustomerPrototypePostWifiNetworkOKBody struct {

	// wifi network
	WifiNetwork *models.WifiNetwork `json:"wifiNetwork,omitempty"`
}

// Validate validates this customer prototype post wifi network o k body
func (o *CustomerPrototypePostWifiNetworkOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateWifiNetwork(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypePostWifiNetworkOKBody) validateWifiNetwork(formats strfmt.Registry) error {
	if swag.IsZero(o.WifiNetwork) { // not required
		return nil
	}

	if o.WifiNetwork != nil {
		if err := o.WifiNetwork.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypePostWifiNetworkOK" + "." + "wifiNetwork")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypePostWifiNetworkOK" + "." + "wifiNetwork")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this customer prototype post wifi network o k body based on the context it is used
func (o *CustomerPrototypePostWifiNetworkOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateWifiNetwork(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypePostWifiNetworkOKBody) contextValidateWifiNetwork(ctx context.Context, formats strfmt.Registry) error {

	if o.WifiNetwork != nil {
		if err := o.WifiNetwork.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypePostWifiNetworkOK" + "." + "wifiNetwork")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypePostWifiNetworkOK" + "." + "wifiNetwork")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CustomerPrototypePostWifiNetworkOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomerPrototypePostWifiNetworkOKBody) UnmarshalBinary(b []byte) error {
	var res CustomerPrototypePostWifiNetworkOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
