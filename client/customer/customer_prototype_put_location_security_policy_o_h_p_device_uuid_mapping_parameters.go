// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams creates a new CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams() *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	return &CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithTimeout creates a new CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithTimeout(timeout time.Duration) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	return &CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithContext creates a new CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithContext(ctx context.Context) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	return &CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithHTTPClient creates a new CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParamsWithHTTPClient(client *http.Client) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	return &CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams contains all the parameters to send to the API endpoint

	for the customer prototype put location security policy o h p device Uuid mapping operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams struct {

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	/* LanIPV4.

	   Mobile device lanIpv4 address, if any
	*/
	LanIPV4 *string

	/* LanIPV6.

	   Mobile device lanIpv6 address, if any
	*/
	LanIPV6 *string

	// LocationID.
	LocationID string

	// UUID.
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype put location security policy o h p device Uuid mapping params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithDefaults() *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype put location security policy o h p device Uuid mapping params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithTimeout(timeout time.Duration) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithContext(ctx context.Context) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithHTTPClient(client *http.Client) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithID(id string) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetID(id string) {
	o.ID = id
}

// WithLanIPV4 adds the lanIPV4 to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithLanIPV4(lanIPV4 *string) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetLanIPV4(lanIPV4)
	return o
}

// SetLanIPV4 adds the lanIpv4 to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetLanIPV4(lanIPV4 *string) {
	o.LanIPV4 = lanIPV4
}

// WithLanIPV6 adds the lanIPV6 to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithLanIPV6(lanIPV6 *string) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetLanIPV6(lanIPV6)
	return o
}

// SetLanIPV6 adds the lanIpv6 to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetLanIPV6(lanIPV6 *string) {
	o.LanIPV6 = lanIPV6
}

// WithLocationID adds the locationID to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithLocationID(locationID string) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithUUID adds the uuid to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WithUUID(uuid string) *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the customer prototype put location security policy o h p device Uuid mapping params
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePutLocationSecurityPolicyOHPDeviceUUIDMappingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.LanIPV4 != nil {

		// form param lanIpv4
		var frLanIPV4 string
		if o.LanIPV4 != nil {
			frLanIPV4 = *o.LanIPV4
		}
		fLanIPV4 := frLanIPV4
		if fLanIPV4 != "" {
			if err := r.SetFormParam("lanIpv4", fLanIPV4); err != nil {
				return err
			}
		}
	}

	if o.LanIPV6 != nil {

		// form param lanIpv6
		var frLanIPV6 string
		if o.LanIPV6 != nil {
			frLanIPV6 = *o.LanIPV6
		}
		fLanIPV6 := frLanIPV6
		if fLanIPV6 != "" {
			if err := r.SetFormParam("lanIpv6", fLanIPV6); err != nil {
				return err
			}
		}
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// form param uuid
	frUUID := o.UUID
	fUUID := frUUID
	if fUUID != "" {
		if err := r.SetFormParam("uuid", fUUID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
