// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypeGetSpeedTestResultsByRequestIDParams creates a new CustomerPrototypeGetSpeedTestResultsByRequestIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypeGetSpeedTestResultsByRequestIDParams() *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	return &CustomerPrototypeGetSpeedTestResultsByRequestIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithTimeout creates a new CustomerPrototypeGetSpeedTestResultsByRequestIDParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithTimeout(timeout time.Duration) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	return &CustomerPrototypeGetSpeedTestResultsByRequestIDParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithContext creates a new CustomerPrototypeGetSpeedTestResultsByRequestIDParams object
// with the ability to set a context for a request.
func NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithContext(ctx context.Context) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	return &CustomerPrototypeGetSpeedTestResultsByRequestIDParams{
		Context: ctx,
	}
}

// NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithHTTPClient creates a new CustomerPrototypeGetSpeedTestResultsByRequestIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypeGetSpeedTestResultsByRequestIDParamsWithHTTPClient(client *http.Client) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	return &CustomerPrototypeGetSpeedTestResultsByRequestIDParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypeGetSpeedTestResultsByRequestIDParams contains all the parameters to send to the API endpoint

	for the customer prototype get speed test results by request Id operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypeGetSpeedTestResultsByRequestIDParams struct {

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// NodeID.
	NodeID string

	// RequestID.
	RequestID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype get speed test results by request Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithDefaults() *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype get speed test results by request Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithTimeout(timeout time.Duration) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithContext(ctx context.Context) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithHTTPClient(client *http.Client) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithID(id string) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithLocationID(locationID string) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithNodeID adds the nodeID to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithNodeID(nodeID string) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetNodeID(nodeID string) {
	o.NodeID = nodeID
}

// WithRequestID adds the requestID to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WithRequestID(requestID string) *CustomerPrototypeGetSpeedTestResultsByRequestIDParams {
	o.SetRequestID(requestID)
	return o
}

// SetRequestID adds the requestId to the customer prototype get speed test results by request Id params
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) SetRequestID(requestID string) {
	o.RequestID = requestID
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypeGetSpeedTestResultsByRequestIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	// path param nodeId
	if err := r.SetPathParam("nodeId", o.NodeID); err != nil {
		return err
	}

	// path param requestId
	if err := r.SetPathParam("requestId", o.RequestID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
