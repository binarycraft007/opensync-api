// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypePutWifiNetworkReader is a Reader for the CustomerPrototypePutWifiNetwork structure.
type CustomerPrototypePutWifiNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypePutWifiNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypePutWifiNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypePutWifiNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypePutWifiNetworkOK creates a CustomerPrototypePutWifiNetworkOK with default headers values
func NewCustomerPrototypePutWifiNetworkOK() *CustomerPrototypePutWifiNetworkOK {
	return &CustomerPrototypePutWifiNetworkOK{}
}

/*
CustomerPrototypePutWifiNetworkOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypePutWifiNetworkOK struct {
	Payload *CustomerPrototypePutWifiNetworkOKBody
}

// IsSuccess returns true when this customer prototype put wifi network o k response has a 2xx status code
func (o *CustomerPrototypePutWifiNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype put wifi network o k response has a 3xx status code
func (o *CustomerPrototypePutWifiNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype put wifi network o k response has a 4xx status code
func (o *CustomerPrototypePutWifiNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype put wifi network o k response has a 5xx status code
func (o *CustomerPrototypePutWifiNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype put wifi network o k response a status code equal to that given
func (o *CustomerPrototypePutWifiNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype put wifi network o k response
func (o *CustomerPrototypePutWifiNetworkOK) Code() int {
	return 200
}

func (o *CustomerPrototypePutWifiNetworkOK) Error() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/wifiNetwork][%d] customerPrototypePutWifiNetworkOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePutWifiNetworkOK) String() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/wifiNetwork][%d] customerPrototypePutWifiNetworkOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePutWifiNetworkOK) GetPayload() *CustomerPrototypePutWifiNetworkOKBody {
	return o.Payload
}

func (o *CustomerPrototypePutWifiNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CustomerPrototypePutWifiNetworkOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypePutWifiNetworkDefault creates a CustomerPrototypePutWifiNetworkDefault with default headers values
func NewCustomerPrototypePutWifiNetworkDefault(code int) *CustomerPrototypePutWifiNetworkDefault {
	return &CustomerPrototypePutWifiNetworkDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypePutWifiNetworkDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypePutWifiNetworkDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype put wifi network default response has a 2xx status code
func (o *CustomerPrototypePutWifiNetworkDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype put wifi network default response has a 3xx status code
func (o *CustomerPrototypePutWifiNetworkDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype put wifi network default response has a 4xx status code
func (o *CustomerPrototypePutWifiNetworkDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype put wifi network default response has a 5xx status code
func (o *CustomerPrototypePutWifiNetworkDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype put wifi network default response a status code equal to that given
func (o *CustomerPrototypePutWifiNetworkDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype put wifi network default response
func (o *CustomerPrototypePutWifiNetworkDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypePutWifiNetworkDefault) Error() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/wifiNetwork][%d] Customer.prototype.putWifiNetwork default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePutWifiNetworkDefault) String() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/wifiNetwork][%d] Customer.prototype.putWifiNetwork default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePutWifiNetworkDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypePutWifiNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CustomerPrototypePutWifiNetworkOKBody customer prototype put wifi network o k body
swagger:model CustomerPrototypePutWifiNetworkOKBody
*/
type CustomerPrototypePutWifiNetworkOKBody struct {

	// wifi network
	WifiNetwork *models.WifiNetwork `json:"wifiNetwork,omitempty"`
}

// Validate validates this customer prototype put wifi network o k body
func (o *CustomerPrototypePutWifiNetworkOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateWifiNetwork(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypePutWifiNetworkOKBody) validateWifiNetwork(formats strfmt.Registry) error {
	if swag.IsZero(o.WifiNetwork) { // not required
		return nil
	}

	if o.WifiNetwork != nil {
		if err := o.WifiNetwork.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypePutWifiNetworkOK" + "." + "wifiNetwork")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypePutWifiNetworkOK" + "." + "wifiNetwork")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this customer prototype put wifi network o k body based on the context it is used
func (o *CustomerPrototypePutWifiNetworkOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateWifiNetwork(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerPrototypePutWifiNetworkOKBody) contextValidateWifiNetwork(ctx context.Context, formats strfmt.Registry) error {

	if o.WifiNetwork != nil {
		if err := o.WifiNetwork.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customerPrototypePutWifiNetworkOK" + "." + "wifiNetwork")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customerPrototypePutWifiNetworkOK" + "." + "wifiNetwork")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CustomerPrototypePutWifiNetworkOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomerPrototypePutWifiNetworkOKBody) UnmarshalBinary(b []byte) error {
	var res CustomerPrototypePutWifiNetworkOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
