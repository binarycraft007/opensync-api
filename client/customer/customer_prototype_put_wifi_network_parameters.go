// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePutWifiNetworkParams creates a new CustomerPrototypePutWifiNetworkParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePutWifiNetworkParams() *CustomerPrototypePutWifiNetworkParams {
	return &CustomerPrototypePutWifiNetworkParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePutWifiNetworkParamsWithTimeout creates a new CustomerPrototypePutWifiNetworkParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePutWifiNetworkParamsWithTimeout(timeout time.Duration) *CustomerPrototypePutWifiNetworkParams {
	return &CustomerPrototypePutWifiNetworkParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePutWifiNetworkParamsWithContext creates a new CustomerPrototypePutWifiNetworkParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePutWifiNetworkParamsWithContext(ctx context.Context) *CustomerPrototypePutWifiNetworkParams {
	return &CustomerPrototypePutWifiNetworkParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePutWifiNetworkParamsWithHTTPClient creates a new CustomerPrototypePutWifiNetworkParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePutWifiNetworkParamsWithHTTPClient(client *http.Client) *CustomerPrototypePutWifiNetworkParams {
	return &CustomerPrototypePutWifiNetworkParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePutWifiNetworkParams contains all the parameters to send to the API endpoint

	for the customer prototype put wifi network operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePutWifiNetworkParams struct {

	// EncryptionKey.
	EncryptionKey *string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	//
	// Format: JSON
	LocationID string

	// Ssid.
	Ssid *string

	// WpaMode.
	WpaMode *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype put wifi network params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutWifiNetworkParams) WithDefaults() *CustomerPrototypePutWifiNetworkParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype put wifi network params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePutWifiNetworkParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithTimeout(timeout time.Duration) *CustomerPrototypePutWifiNetworkParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithContext(ctx context.Context) *CustomerPrototypePutWifiNetworkParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithHTTPClient(client *http.Client) *CustomerPrototypePutWifiNetworkParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEncryptionKey adds the encryptionKey to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithEncryptionKey(encryptionKey *string) *CustomerPrototypePutWifiNetworkParams {
	o.SetEncryptionKey(encryptionKey)
	return o
}

// SetEncryptionKey adds the encryptionKey to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetEncryptionKey(encryptionKey *string) {
	o.EncryptionKey = encryptionKey
}

// WithID adds the id to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithID(id string) *CustomerPrototypePutWifiNetworkParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithLocationID(locationID string) *CustomerPrototypePutWifiNetworkParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithSsid adds the ssid to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithSsid(ssid *string) *CustomerPrototypePutWifiNetworkParams {
	o.SetSsid(ssid)
	return o
}

// SetSsid adds the ssid to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetSsid(ssid *string) {
	o.Ssid = ssid
}

// WithWpaMode adds the wpaMode to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) WithWpaMode(wpaMode *string) *CustomerPrototypePutWifiNetworkParams {
	o.SetWpaMode(wpaMode)
	return o
}

// SetWpaMode adds the wpaMode to the customer prototype put wifi network params
func (o *CustomerPrototypePutWifiNetworkParams) SetWpaMode(wpaMode *string) {
	o.WpaMode = wpaMode
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePutWifiNetworkParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EncryptionKey != nil {

		// form param encryptionKey
		var frEncryptionKey string
		if o.EncryptionKey != nil {
			frEncryptionKey = *o.EncryptionKey
		}
		fEncryptionKey := frEncryptionKey
		if fEncryptionKey != "" {
			if err := r.SetFormParam("encryptionKey", fEncryptionKey); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.Ssid != nil {

		// form param ssid
		var frSsid string
		if o.Ssid != nil {
			frSsid = *o.Ssid
		}
		fSsid := frSsid
		if fSsid != "" {
			if err := r.SetFormParam("ssid", fSsid); err != nil {
				return err
			}
		}
	}

	if o.WpaMode != nil {

		// form param wpaMode
		var frWpaMode string
		if o.WpaMode != nil {
			frWpaMode = *o.WpaMode
		}
		fWpaMode := frWpaMode
		if fWpaMode != "" {
			if err := r.SetFormParam("wpaMode", fWpaMode); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
