// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypePutBleModeReader is a Reader for the CustomerPrototypePutBleMode structure.
type CustomerPrototypePutBleModeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypePutBleModeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypePutBleModeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypePutBleModeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypePutBleModeOK creates a CustomerPrototypePutBleModeOK with default headers values
func NewCustomerPrototypePutBleModeOK() *CustomerPrototypePutBleModeOK {
	return &CustomerPrototypePutBleModeOK{}
}

/*
CustomerPrototypePutBleModeOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypePutBleModeOK struct {
	Payload *CustomerPrototypePutBleModeOKBody
}

// IsSuccess returns true when this customer prototype put ble mode o k response has a 2xx status code
func (o *CustomerPrototypePutBleModeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype put ble mode o k response has a 3xx status code
func (o *CustomerPrototypePutBleModeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype put ble mode o k response has a 4xx status code
func (o *CustomerPrototypePutBleModeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype put ble mode o k response has a 5xx status code
func (o *CustomerPrototypePutBleModeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype put ble mode o k response a status code equal to that given
func (o *CustomerPrototypePutBleModeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype put ble mode o k response
func (o *CustomerPrototypePutBleModeOK) Code() int {
	return 200
}

func (o *CustomerPrototypePutBleModeOK) Error() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/bleMode][%d] customerPrototypePutBleModeOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePutBleModeOK) String() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/bleMode][%d] customerPrototypePutBleModeOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypePutBleModeOK) GetPayload() *CustomerPrototypePutBleModeOKBody {
	return o.Payload
}

func (o *CustomerPrototypePutBleModeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CustomerPrototypePutBleModeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypePutBleModeDefault creates a CustomerPrototypePutBleModeDefault with default headers values
func NewCustomerPrototypePutBleModeDefault(code int) *CustomerPrototypePutBleModeDefault {
	return &CustomerPrototypePutBleModeDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypePutBleModeDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypePutBleModeDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype put ble mode default response has a 2xx status code
func (o *CustomerPrototypePutBleModeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype put ble mode default response has a 3xx status code
func (o *CustomerPrototypePutBleModeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype put ble mode default response has a 4xx status code
func (o *CustomerPrototypePutBleModeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype put ble mode default response has a 5xx status code
func (o *CustomerPrototypePutBleModeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype put ble mode default response a status code equal to that given
func (o *CustomerPrototypePutBleModeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype put ble mode default response
func (o *CustomerPrototypePutBleModeDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypePutBleModeDefault) Error() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/bleMode][%d] Customer.prototype.putBleMode default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePutBleModeDefault) String() string {
	return fmt.Sprintf("[PUT /Customers/{id}/locations/{locationId}/bleMode][%d] Customer.prototype.putBleMode default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypePutBleModeDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypePutBleModeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CustomerPrototypePutBleModeOKBody customer prototype put ble mode o k body
swagger:model CustomerPrototypePutBleModeOKBody
*/
type CustomerPrototypePutBleModeOKBody struct {

	// mode
	Mode string `json:"mode,omitempty"`
}

// Validate validates this customer prototype put ble mode o k body
func (o *CustomerPrototypePutBleModeOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this customer prototype put ble mode o k body based on context it is used
func (o *CustomerPrototypePutBleModeOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CustomerPrototypePutBleModeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomerPrototypePutBleModeOKBody) UnmarshalBinary(b []byte) error {
	var res CustomerPrototypePutBleModeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
