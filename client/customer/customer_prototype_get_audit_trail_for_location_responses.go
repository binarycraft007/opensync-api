// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypeGetAuditTrailForLocationReader is a Reader for the CustomerPrototypeGetAuditTrailForLocation structure.
type CustomerPrototypeGetAuditTrailForLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypeGetAuditTrailForLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypeGetAuditTrailForLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypeGetAuditTrailForLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypeGetAuditTrailForLocationOK creates a CustomerPrototypeGetAuditTrailForLocationOK with default headers values
func NewCustomerPrototypeGetAuditTrailForLocationOK() *CustomerPrototypeGetAuditTrailForLocationOK {
	return &CustomerPrototypeGetAuditTrailForLocationOK{}
}

/*
CustomerPrototypeGetAuditTrailForLocationOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypeGetAuditTrailForLocationOK struct {
	Payload models.XAny
}

// IsSuccess returns true when this customer prototype get audit trail for location o k response has a 2xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype get audit trail for location o k response has a 3xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype get audit trail for location o k response has a 4xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype get audit trail for location o k response has a 5xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype get audit trail for location o k response a status code equal to that given
func (o *CustomerPrototypeGetAuditTrailForLocationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype get audit trail for location o k response
func (o *CustomerPrototypeGetAuditTrailForLocationOK) Code() int {
	return 200
}

func (o *CustomerPrototypeGetAuditTrailForLocationOK) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/auditTrail][%d] customerPrototypeGetAuditTrailForLocationOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetAuditTrailForLocationOK) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/auditTrail][%d] customerPrototypeGetAuditTrailForLocationOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetAuditTrailForLocationOK) GetPayload() models.XAny {
	return o.Payload
}

func (o *CustomerPrototypeGetAuditTrailForLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypeGetAuditTrailForLocationDefault creates a CustomerPrototypeGetAuditTrailForLocationDefault with default headers values
func NewCustomerPrototypeGetAuditTrailForLocationDefault(code int) *CustomerPrototypeGetAuditTrailForLocationDefault {
	return &CustomerPrototypeGetAuditTrailForLocationDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypeGetAuditTrailForLocationDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypeGetAuditTrailForLocationDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype get audit trail for location default response has a 2xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype get audit trail for location default response has a 3xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype get audit trail for location default response has a 4xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype get audit trail for location default response has a 5xx status code
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype get audit trail for location default response a status code equal to that given
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype get audit trail for location default response
func (o *CustomerPrototypeGetAuditTrailForLocationDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypeGetAuditTrailForLocationDefault) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/auditTrail][%d] Customer.prototype.getAuditTrailForLocation default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetAuditTrailForLocationDefault) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/auditTrail][%d] Customer.prototype.getAuditTrailForLocation default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetAuditTrailForLocationDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypeGetAuditTrailForLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
