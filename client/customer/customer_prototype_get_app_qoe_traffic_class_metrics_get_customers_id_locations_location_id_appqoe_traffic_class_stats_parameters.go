// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams creates a new CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams() *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	return &CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithTimeout creates a new CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithTimeout(timeout time.Duration) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	return &CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithContext creates a new CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams object
// with the ability to set a context for a request.
func NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithContext(ctx context.Context) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	return &CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams{
		Context: ctx,
	}
}

// NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithHTTPClient creates a new CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParamsWithHTTPClient(client *http.Client) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	return &CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams contains all the parameters to send to the API endpoint

	for the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams struct {

	/* EndTime.

	   format yyyy-mm-ddThh:MM:ss.nnnZ, 24 hours time specified in UTC

	   Format: date-time
	*/
	EndTime strfmt.DateTime

	/* Granularity.

	   any of the values - total/1 minute/15 minutes/1 hour/1 day
	*/
	Granularity string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	/* Limit.

	   Maximum number of devices to return.

	   Format: double
	*/
	Limit *float64

	// LocationID.
	LocationID string

	/* Macs.

	   array of macs[]

	   Format: JSON
	*/
	Macs *string

	/* StartTime.

	   format yyyy-mm-ddThh:MM:ss.nnnZ, 24 hours time specified in UTC

	   Format: date-time
	*/
	StartTime strfmt.DateTime

	/* TrafficClasses.

	   array of trafficClasses

	   Format: JSON
	*/
	TrafficClasses *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithDefaults() *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithTimeout(timeout time.Duration) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithContext(ctx context.Context) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithHTTPClient(client *http.Client) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTime adds the endTime to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithEndTime(endTime strfmt.DateTime) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetEndTime(endTime strfmt.DateTime) {
	o.EndTime = endTime
}

// WithGranularity adds the granularity to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithGranularity(granularity string) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetGranularity(granularity)
	return o
}

// SetGranularity adds the granularity to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetGranularity(granularity string) {
	o.Granularity = granularity
}

// WithID adds the id to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithID(id string) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetID(id string) {
	o.ID = id
}

// WithLimit adds the limit to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithLimit(limit *float64) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetLimit(limit *float64) {
	o.Limit = limit
}

// WithLocationID adds the locationID to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithLocationID(locationID string) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithMacs adds the macs to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithMacs(macs *string) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetMacs(macs)
	return o
}

// SetMacs adds the macs to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetMacs(macs *string) {
	o.Macs = macs
}

// WithStartTime adds the startTime to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithStartTime(startTime strfmt.DateTime) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetStartTime(startTime strfmt.DateTime) {
	o.StartTime = startTime
}

// WithTrafficClasses adds the trafficClasses to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WithTrafficClasses(trafficClasses *string) *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams {
	o.SetTrafficClasses(trafficClasses)
	return o
}

// SetTrafficClasses adds the trafficClasses to the customer prototype get app qoe traffic class metrics get customers id locations location Id appqoe traffic class stats params
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) SetTrafficClasses(trafficClasses *string) {
	o.TrafficClasses = trafficClasses
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypeGetAppQoeTrafficClassMetricsGetCustomersIDLocationsLocationIDAppqoeTrafficClassStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endTime
	qrEndTime := o.EndTime
	qEndTime := qrEndTime.String()
	if qEndTime != "" {

		if err := r.SetQueryParam("endTime", qEndTime); err != nil {
			return err
		}
	}

	// query param granularity
	qrGranularity := o.Granularity
	qGranularity := qrGranularity
	if qGranularity != "" {

		if err := r.SetQueryParam("granularity", qGranularity); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit float64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatFloat64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.Macs != nil {

		// query param macs
		var qrMacs string

		if o.Macs != nil {
			qrMacs = *o.Macs
		}
		qMacs := qrMacs
		if qMacs != "" {

			if err := r.SetQueryParam("macs", qMacs); err != nil {
				return err
			}
		}
	}

	// query param startTime
	qrStartTime := o.StartTime
	qStartTime := qrStartTime.String()
	if qStartTime != "" {

		if err := r.SetQueryParam("startTime", qStartTime); err != nil {
			return err
		}
	}

	if o.TrafficClasses != nil {

		// query param trafficClasses
		var qrTrafficClasses string

		if o.TrafficClasses != nil {
			qrTrafficClasses = *o.TrafficClasses
		}
		qTrafficClasses := qrTrafficClasses
		if qTrafficClasses != "" {

			if err := r.SetQueryParam("trafficClasses", qTrafficClasses); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
