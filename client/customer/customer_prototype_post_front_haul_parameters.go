// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypePostFrontHaulParams creates a new CustomerPrototypePostFrontHaulParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePostFrontHaulParams() *CustomerPrototypePostFrontHaulParams {
	return &CustomerPrototypePostFrontHaulParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePostFrontHaulParamsWithTimeout creates a new CustomerPrototypePostFrontHaulParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePostFrontHaulParamsWithTimeout(timeout time.Duration) *CustomerPrototypePostFrontHaulParams {
	return &CustomerPrototypePostFrontHaulParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePostFrontHaulParamsWithContext creates a new CustomerPrototypePostFrontHaulParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePostFrontHaulParamsWithContext(ctx context.Context) *CustomerPrototypePostFrontHaulParams {
	return &CustomerPrototypePostFrontHaulParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePostFrontHaulParamsWithHTTPClient creates a new CustomerPrototypePostFrontHaulParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePostFrontHaulParamsWithHTTPClient(client *http.Client) *CustomerPrototypePostFrontHaulParams {
	return &CustomerPrototypePostFrontHaulParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePostFrontHaulParams contains all the parameters to send to the API endpoint

	for the customer prototype post front haul operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePostFrontHaulParams struct {

	// AccessZone.
	AccessZone *string

	// Enable.
	//
	// Default: true
	Enable *bool

	// EncryptionKey.
	EncryptionKey string

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// NetworkID.
	NetworkID *string

	// Ssid.
	Ssid string

	// SsidBroadcast.
	SsidBroadcast *bool

	// WpaMode.
	WpaMode *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype post front haul params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostFrontHaulParams) WithDefaults() *CustomerPrototypePostFrontHaulParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype post front haul params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePostFrontHaulParams) SetDefaults() {
	var (
		enableDefault = bool(true)
	)

	val := CustomerPrototypePostFrontHaulParams{
		Enable: &enableDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithTimeout(timeout time.Duration) *CustomerPrototypePostFrontHaulParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithContext(ctx context.Context) *CustomerPrototypePostFrontHaulParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithHTTPClient(client *http.Client) *CustomerPrototypePostFrontHaulParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessZone adds the accessZone to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithAccessZone(accessZone *string) *CustomerPrototypePostFrontHaulParams {
	o.SetAccessZone(accessZone)
	return o
}

// SetAccessZone adds the accessZone to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetAccessZone(accessZone *string) {
	o.AccessZone = accessZone
}

// WithEnable adds the enable to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithEnable(enable *bool) *CustomerPrototypePostFrontHaulParams {
	o.SetEnable(enable)
	return o
}

// SetEnable adds the enable to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetEnable(enable *bool) {
	o.Enable = enable
}

// WithEncryptionKey adds the encryptionKey to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithEncryptionKey(encryptionKey string) *CustomerPrototypePostFrontHaulParams {
	o.SetEncryptionKey(encryptionKey)
	return o
}

// SetEncryptionKey adds the encryptionKey to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetEncryptionKey(encryptionKey string) {
	o.EncryptionKey = encryptionKey
}

// WithID adds the id to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithID(id string) *CustomerPrototypePostFrontHaulParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithLocationID(locationID string) *CustomerPrototypePostFrontHaulParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithNetworkID adds the networkID to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithNetworkID(networkID *string) *CustomerPrototypePostFrontHaulParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetNetworkID(networkID *string) {
	o.NetworkID = networkID
}

// WithSsid adds the ssid to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithSsid(ssid string) *CustomerPrototypePostFrontHaulParams {
	o.SetSsid(ssid)
	return o
}

// SetSsid adds the ssid to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetSsid(ssid string) {
	o.Ssid = ssid
}

// WithSsidBroadcast adds the ssidBroadcast to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithSsidBroadcast(ssidBroadcast *bool) *CustomerPrototypePostFrontHaulParams {
	o.SetSsidBroadcast(ssidBroadcast)
	return o
}

// SetSsidBroadcast adds the ssidBroadcast to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetSsidBroadcast(ssidBroadcast *bool) {
	o.SsidBroadcast = ssidBroadcast
}

// WithWpaMode adds the wpaMode to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) WithWpaMode(wpaMode *string) *CustomerPrototypePostFrontHaulParams {
	o.SetWpaMode(wpaMode)
	return o
}

// SetWpaMode adds the wpaMode to the customer prototype post front haul params
func (o *CustomerPrototypePostFrontHaulParams) SetWpaMode(wpaMode *string) {
	o.WpaMode = wpaMode
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePostFrontHaulParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessZone != nil {

		// form param accessZone
		var frAccessZone string
		if o.AccessZone != nil {
			frAccessZone = *o.AccessZone
		}
		fAccessZone := frAccessZone
		if fAccessZone != "" {
			if err := r.SetFormParam("accessZone", fAccessZone); err != nil {
				return err
			}
		}
	}

	if o.Enable != nil {

		// form param enable
		var frEnable bool
		if o.Enable != nil {
			frEnable = *o.Enable
		}
		fEnable := swag.FormatBool(frEnable)
		if fEnable != "" {
			if err := r.SetFormParam("enable", fEnable); err != nil {
				return err
			}
		}
	}

	// form param encryptionKey
	frEncryptionKey := o.EncryptionKey
	fEncryptionKey := frEncryptionKey
	if fEncryptionKey != "" {
		if err := r.SetFormParam("encryptionKey", fEncryptionKey); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.NetworkID != nil {

		// form param networkId
		var frNetworkID string
		if o.NetworkID != nil {
			frNetworkID = *o.NetworkID
		}
		fNetworkID := frNetworkID
		if fNetworkID != "" {
			if err := r.SetFormParam("networkId", fNetworkID); err != nil {
				return err
			}
		}
	}

	// form param ssid
	frSsid := o.Ssid
	fSsid := frSsid
	if fSsid != "" {
		if err := r.SetFormParam("ssid", fSsid); err != nil {
			return err
		}
	}

	if o.SsidBroadcast != nil {

		// form param ssidBroadcast
		var frSsidBroadcast bool
		if o.SsidBroadcast != nil {
			frSsidBroadcast = *o.SsidBroadcast
		}
		fSsidBroadcast := swag.FormatBool(frSsidBroadcast)
		if fSsidBroadcast != "" {
			if err := r.SetFormParam("ssidBroadcast", fSsidBroadcast); err != nil {
				return err
			}
		}
	}

	if o.WpaMode != nil {

		// form param wpaMode
		var frWpaMode string
		if o.WpaMode != nil {
			frWpaMode = *o.WpaMode
		}
		fWpaMode := frWpaMode
		if fWpaMode != "" {
			if err := r.SetFormParam("wpaMode", fWpaMode); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
