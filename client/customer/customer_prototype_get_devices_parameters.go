// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCustomerPrototypeGetDevicesParams creates a new CustomerPrototypeGetDevicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypeGetDevicesParams() *CustomerPrototypeGetDevicesParams {
	return &CustomerPrototypeGetDevicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypeGetDevicesParamsWithTimeout creates a new CustomerPrototypeGetDevicesParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypeGetDevicesParamsWithTimeout(timeout time.Duration) *CustomerPrototypeGetDevicesParams {
	return &CustomerPrototypeGetDevicesParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypeGetDevicesParamsWithContext creates a new CustomerPrototypeGetDevicesParams object
// with the ability to set a context for a request.
func NewCustomerPrototypeGetDevicesParamsWithContext(ctx context.Context) *CustomerPrototypeGetDevicesParams {
	return &CustomerPrototypeGetDevicesParams{
		Context: ctx,
	}
}

// NewCustomerPrototypeGetDevicesParamsWithHTTPClient creates a new CustomerPrototypeGetDevicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypeGetDevicesParamsWithHTTPClient(client *http.Client) *CustomerPrototypeGetDevicesParams {
	return &CustomerPrototypeGetDevicesParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypeGetDevicesParams contains all the parameters to send to the API endpoint

	for the customer prototype get devices operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypeGetDevicesParams struct {

	// AllSSIDs.
	AllSSIDs *bool

	// DaysOffline.
	//
	// Format: double
	DaysOffline *float64

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	//
	// Format: JSON
	LocationID string

	// ShowPartnerComponent.
	//
	// Default: true
	ShowPartnerComponent *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype get devices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDevicesParams) WithDefaults() *CustomerPrototypeGetDevicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype get devices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypeGetDevicesParams) SetDefaults() {
	var (
		showPartnerComponentDefault = bool(true)
	)

	val := CustomerPrototypeGetDevicesParams{
		ShowPartnerComponent: &showPartnerComponentDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithTimeout(timeout time.Duration) *CustomerPrototypeGetDevicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithContext(ctx context.Context) *CustomerPrototypeGetDevicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithHTTPClient(client *http.Client) *CustomerPrototypeGetDevicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllSSIDs adds the allSSIDs to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithAllSSIDs(allSSIDs *bool) *CustomerPrototypeGetDevicesParams {
	o.SetAllSSIDs(allSSIDs)
	return o
}

// SetAllSSIDs adds the allSSIDs to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetAllSSIDs(allSSIDs *bool) {
	o.AllSSIDs = allSSIDs
}

// WithDaysOffline adds the daysOffline to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithDaysOffline(daysOffline *float64) *CustomerPrototypeGetDevicesParams {
	o.SetDaysOffline(daysOffline)
	return o
}

// SetDaysOffline adds the daysOffline to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetDaysOffline(daysOffline *float64) {
	o.DaysOffline = daysOffline
}

// WithID adds the id to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithID(id string) *CustomerPrototypeGetDevicesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithLocationID(locationID string) *CustomerPrototypeGetDevicesParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithShowPartnerComponent adds the showPartnerComponent to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) WithShowPartnerComponent(showPartnerComponent *bool) *CustomerPrototypeGetDevicesParams {
	o.SetShowPartnerComponent(showPartnerComponent)
	return o
}

// SetShowPartnerComponent adds the showPartnerComponent to the customer prototype get devices params
func (o *CustomerPrototypeGetDevicesParams) SetShowPartnerComponent(showPartnerComponent *bool) {
	o.ShowPartnerComponent = showPartnerComponent
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypeGetDevicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllSSIDs != nil {

		// query param allSSIDs
		var qrAllSSIDs bool

		if o.AllSSIDs != nil {
			qrAllSSIDs = *o.AllSSIDs
		}
		qAllSSIDs := swag.FormatBool(qrAllSSIDs)
		if qAllSSIDs != "" {

			if err := r.SetQueryParam("allSSIDs", qAllSSIDs); err != nil {
				return err
			}
		}
	}

	if o.DaysOffline != nil {

		// query param daysOffline
		var qrDaysOffline float64

		if o.DaysOffline != nil {
			qrDaysOffline = *o.DaysOffline
		}
		qDaysOffline := swag.FormatFloat64(qrDaysOffline)
		if qDaysOffline != "" {

			if err := r.SetQueryParam("daysOffline", qDaysOffline); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.ShowPartnerComponent != nil {

		// query param showPartnerComponent
		var qrShowPartnerComponent bool

		if o.ShowPartnerComponent != nil {
			qrShowPartnerComponent = *o.ShowPartnerComponent
		}
		qShowPartnerComponent := swag.FormatBool(qrShowPartnerComponent)
		if qShowPartnerComponent != "" {

			if err := r.SetQueryParam("showPartnerComponent", qShowPartnerComponent); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
