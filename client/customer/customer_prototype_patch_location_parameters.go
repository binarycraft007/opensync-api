// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCustomerPrototypePatchLocationParams creates a new CustomerPrototypePatchLocationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCustomerPrototypePatchLocationParams() *CustomerPrototypePatchLocationParams {
	return &CustomerPrototypePatchLocationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerPrototypePatchLocationParamsWithTimeout creates a new CustomerPrototypePatchLocationParams object
// with the ability to set a timeout on a request.
func NewCustomerPrototypePatchLocationParamsWithTimeout(timeout time.Duration) *CustomerPrototypePatchLocationParams {
	return &CustomerPrototypePatchLocationParams{
		timeout: timeout,
	}
}

// NewCustomerPrototypePatchLocationParamsWithContext creates a new CustomerPrototypePatchLocationParams object
// with the ability to set a context for a request.
func NewCustomerPrototypePatchLocationParamsWithContext(ctx context.Context) *CustomerPrototypePatchLocationParams {
	return &CustomerPrototypePatchLocationParams{
		Context: ctx,
	}
}

// NewCustomerPrototypePatchLocationParamsWithHTTPClient creates a new CustomerPrototypePatchLocationParams object
// with the ability to set a custom HTTPClient for a request.
func NewCustomerPrototypePatchLocationParamsWithHTTPClient(client *http.Client) *CustomerPrototypePatchLocationParams {
	return &CustomerPrototypePatchLocationParams{
		HTTPClient: client,
	}
}

/*
CustomerPrototypePatchLocationParams contains all the parameters to send to the API endpoint

	for the customer prototype patch location operation.

	Typically these are written to a http.Request.
*/
type CustomerPrototypePatchLocationParams struct {

	/* ID.

	   Customer id

	   Format: JSON
	*/
	ID string

	// LocationID.
	LocationID string

	// Profile.
	Profile *string

	// ServiceID.
	ServiceID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the customer prototype patch location params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchLocationParams) WithDefaults() *CustomerPrototypePatchLocationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the customer prototype patch location params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CustomerPrototypePatchLocationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithTimeout(timeout time.Duration) *CustomerPrototypePatchLocationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithContext(ctx context.Context) *CustomerPrototypePatchLocationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithHTTPClient(client *http.Client) *CustomerPrototypePatchLocationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithID(id string) *CustomerPrototypePatchLocationParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetID(id string) {
	o.ID = id
}

// WithLocationID adds the locationID to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithLocationID(locationID string) *CustomerPrototypePatchLocationParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetLocationID(locationID string) {
	o.LocationID = locationID
}

// WithProfile adds the profile to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithProfile(profile *string) *CustomerPrototypePatchLocationParams {
	o.SetProfile(profile)
	return o
}

// SetProfile adds the profile to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetProfile(profile *string) {
	o.Profile = profile
}

// WithServiceID adds the serviceID to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) WithServiceID(serviceID *string) *CustomerPrototypePatchLocationParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the customer prototype patch location params
func (o *CustomerPrototypePatchLocationParams) SetServiceID(serviceID *string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerPrototypePatchLocationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param locationId
	if err := r.SetPathParam("locationId", o.LocationID); err != nil {
		return err
	}

	if o.Profile != nil {

		// form param profile
		var frProfile string
		if o.Profile != nil {
			frProfile = *o.Profile
		}
		fProfile := frProfile
		if fProfile != "" {
			if err := r.SetFormParam("profile", fProfile); err != nil {
				return err
			}
		}
	}

	if o.ServiceID != nil {

		// form param serviceId
		var frServiceID string
		if o.ServiceID != nil {
			frServiceID = *o.ServiceID
		}
		fServiceID := frServiceID
		if fServiceID != "" {
			if err := r.SetFormParam("serviceId", fServiceID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
