// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// CustomerPrototypeGetAppTimeIPFlowsReader is a Reader for the CustomerPrototypeGetAppTimeIPFlows structure.
type CustomerPrototypeGetAppTimeIPFlowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPrototypeGetAppTimeIPFlowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPrototypeGetAppTimeIPFlowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerPrototypeGetAppTimeIPFlowsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerPrototypeGetAppTimeIPFlowsOK creates a CustomerPrototypeGetAppTimeIPFlowsOK with default headers values
func NewCustomerPrototypeGetAppTimeIPFlowsOK() *CustomerPrototypeGetAppTimeIPFlowsOK {
	return &CustomerPrototypeGetAppTimeIPFlowsOK{}
}

/*
CustomerPrototypeGetAppTimeIPFlowsOK describes a response with status code 200, with default header values.

Request was successful
*/
type CustomerPrototypeGetAppTimeIPFlowsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this customer prototype get app time Ip flows o k response has a 2xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer prototype get app time Ip flows o k response has a 3xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer prototype get app time Ip flows o k response has a 4xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer prototype get app time Ip flows o k response has a 5xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer prototype get app time Ip flows o k response a status code equal to that given
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer prototype get app time Ip flows o k response
func (o *CustomerPrototypeGetAppTimeIPFlowsOK) Code() int {
	return 200
}

func (o *CustomerPrototypeGetAppTimeIPFlowsOK) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/appTime/ipFlows][%d] customerPrototypeGetAppTimeIpFlowsOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetAppTimeIPFlowsOK) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/appTime/ipFlows][%d] customerPrototypeGetAppTimeIpFlowsOK  %+v", 200, o.Payload)
}

func (o *CustomerPrototypeGetAppTimeIPFlowsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CustomerPrototypeGetAppTimeIPFlowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPrototypeGetAppTimeIPFlowsDefault creates a CustomerPrototypeGetAppTimeIPFlowsDefault with default headers values
func NewCustomerPrototypeGetAppTimeIPFlowsDefault(code int) *CustomerPrototypeGetAppTimeIPFlowsDefault {
	return &CustomerPrototypeGetAppTimeIPFlowsDefault{
		_statusCode: code,
	}
}

/*
CustomerPrototypeGetAppTimeIPFlowsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type CustomerPrototypeGetAppTimeIPFlowsDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this customer prototype get app time Ip flows default response has a 2xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer prototype get app time Ip flows default response has a 3xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer prototype get app time Ip flows default response has a 4xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer prototype get app time Ip flows default response has a 5xx status code
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer prototype get app time Ip flows default response a status code equal to that given
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer prototype get app time Ip flows default response
func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) Code() int {
	return o._statusCode
}

func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) Error() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/appTime/ipFlows][%d] Customer.prototype.getAppTimeIpFlows default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) String() string {
	return fmt.Sprintf("[GET /Customers/{id}/locations/{locationId}/appTime/ipFlows][%d] Customer.prototype.getAppTimeIpFlows default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CustomerPrototypeGetAppTimeIPFlowsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
