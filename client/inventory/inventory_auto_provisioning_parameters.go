// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewInventoryAutoProvisioningParams creates a new InventoryAutoProvisioningParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewInventoryAutoProvisioningParams() *InventoryAutoProvisioningParams {
	return &InventoryAutoProvisioningParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewInventoryAutoProvisioningParamsWithTimeout creates a new InventoryAutoProvisioningParams object
// with the ability to set a timeout on a request.
func NewInventoryAutoProvisioningParamsWithTimeout(timeout time.Duration) *InventoryAutoProvisioningParams {
	return &InventoryAutoProvisioningParams{
		timeout: timeout,
	}
}

// NewInventoryAutoProvisioningParamsWithContext creates a new InventoryAutoProvisioningParams object
// with the ability to set a context for a request.
func NewInventoryAutoProvisioningParamsWithContext(ctx context.Context) *InventoryAutoProvisioningParams {
	return &InventoryAutoProvisioningParams{
		Context: ctx,
	}
}

// NewInventoryAutoProvisioningParamsWithHTTPClient creates a new InventoryAutoProvisioningParams object
// with the ability to set a custom HTTPClient for a request.
func NewInventoryAutoProvisioningParamsWithHTTPClient(client *http.Client) *InventoryAutoProvisioningParams {
	return &InventoryAutoProvisioningParams{
		HTTPClient: client,
	}
}

/*
InventoryAutoProvisioningParams contains all the parameters to send to the API endpoint

	for the inventory auto provisioning operation.

	Typically these are written to a http.Request.
*/
type InventoryAutoProvisioningParams struct {

	// AutoProvisionToThisDeployment.
	AutoProvisionToThisDeployment bool

	// NodeID.
	NodeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the inventory auto provisioning params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InventoryAutoProvisioningParams) WithDefaults() *InventoryAutoProvisioningParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the inventory auto provisioning params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InventoryAutoProvisioningParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) WithTimeout(timeout time.Duration) *InventoryAutoProvisioningParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) WithContext(ctx context.Context) *InventoryAutoProvisioningParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) WithHTTPClient(client *http.Client) *InventoryAutoProvisioningParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAutoProvisionToThisDeployment adds the autoProvisionToThisDeployment to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) WithAutoProvisionToThisDeployment(autoProvisionToThisDeployment bool) *InventoryAutoProvisioningParams {
	o.SetAutoProvisionToThisDeployment(autoProvisionToThisDeployment)
	return o
}

// SetAutoProvisionToThisDeployment adds the autoProvisionToThisDeployment to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) SetAutoProvisionToThisDeployment(autoProvisionToThisDeployment bool) {
	o.AutoProvisionToThisDeployment = autoProvisionToThisDeployment
}

// WithNodeID adds the nodeID to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) WithNodeID(nodeID string) *InventoryAutoProvisioningParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the inventory auto provisioning params
func (o *InventoryAutoProvisioningParams) SetNodeID(nodeID string) {
	o.NodeID = nodeID
}

// WriteToRequest writes these params to a swagger request
func (o *InventoryAutoProvisioningParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param autoProvisionToThisDeployment
	frAutoProvisionToThisDeployment := o.AutoProvisionToThisDeployment
	fAutoProvisionToThisDeployment := swag.FormatBool(frAutoProvisionToThisDeployment)
	if fAutoProvisionToThisDeployment != "" {
		if err := r.SetFormParam("autoProvisionToThisDeployment", fAutoProvisionToThisDeployment); err != nil {
			return err
		}
	}

	// path param nodeId
	if err := r.SetPathParam("nodeId", o.NodeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
