// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// LocationPrototypeGetLocationSummaryReader is a Reader for the LocationPrototypeGetLocationSummary structure.
type LocationPrototypeGetLocationSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocationPrototypeGetLocationSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLocationPrototypeGetLocationSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewLocationPrototypeGetLocationSummaryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLocationPrototypeGetLocationSummaryOK creates a LocationPrototypeGetLocationSummaryOK with default headers values
func NewLocationPrototypeGetLocationSummaryOK() *LocationPrototypeGetLocationSummaryOK {
	return &LocationPrototypeGetLocationSummaryOK{}
}

/*
LocationPrototypeGetLocationSummaryOK describes a response with status code 200, with default header values.

Request was successful
*/
type LocationPrototypeGetLocationSummaryOK struct {
	Payload interface{}
}

// IsSuccess returns true when this location prototype get location summary o k response has a 2xx status code
func (o *LocationPrototypeGetLocationSummaryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this location prototype get location summary o k response has a 3xx status code
func (o *LocationPrototypeGetLocationSummaryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this location prototype get location summary o k response has a 4xx status code
func (o *LocationPrototypeGetLocationSummaryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this location prototype get location summary o k response has a 5xx status code
func (o *LocationPrototypeGetLocationSummaryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this location prototype get location summary o k response a status code equal to that given
func (o *LocationPrototypeGetLocationSummaryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the location prototype get location summary o k response
func (o *LocationPrototypeGetLocationSummaryOK) Code() int {
	return 200
}

func (o *LocationPrototypeGetLocationSummaryOK) Error() string {
	return fmt.Sprintf("[GET /Locations/{id}/summary][%d] locationPrototypeGetLocationSummaryOK  %+v", 200, o.Payload)
}

func (o *LocationPrototypeGetLocationSummaryOK) String() string {
	return fmt.Sprintf("[GET /Locations/{id}/summary][%d] locationPrototypeGetLocationSummaryOK  %+v", 200, o.Payload)
}

func (o *LocationPrototypeGetLocationSummaryOK) GetPayload() interface{} {
	return o.Payload
}

func (o *LocationPrototypeGetLocationSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocationPrototypeGetLocationSummaryDefault creates a LocationPrototypeGetLocationSummaryDefault with default headers values
func NewLocationPrototypeGetLocationSummaryDefault(code int) *LocationPrototypeGetLocationSummaryDefault {
	return &LocationPrototypeGetLocationSummaryDefault{
		_statusCode: code,
	}
}

/*
LocationPrototypeGetLocationSummaryDefault describes a response with status code -1, with default header values.

unexpected error
*/
type LocationPrototypeGetLocationSummaryDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this location prototype get location summary default response has a 2xx status code
func (o *LocationPrototypeGetLocationSummaryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this location prototype get location summary default response has a 3xx status code
func (o *LocationPrototypeGetLocationSummaryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this location prototype get location summary default response has a 4xx status code
func (o *LocationPrototypeGetLocationSummaryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this location prototype get location summary default response has a 5xx status code
func (o *LocationPrototypeGetLocationSummaryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this location prototype get location summary default response a status code equal to that given
func (o *LocationPrototypeGetLocationSummaryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the location prototype get location summary default response
func (o *LocationPrototypeGetLocationSummaryDefault) Code() int {
	return o._statusCode
}

func (o *LocationPrototypeGetLocationSummaryDefault) Error() string {
	return fmt.Sprintf("[GET /Locations/{id}/summary][%d] Location.prototype.getLocationSummary default  %+v", o._statusCode, o.Payload)
}

func (o *LocationPrototypeGetLocationSummaryDefault) String() string {
	return fmt.Sprintf("[GET /Locations/{id}/summary][%d] Location.prototype.getLocationSummary default  %+v", o._statusCode, o.Payload)
}

func (o *LocationPrototypeGetLocationSummaryDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *LocationPrototypeGetLocationSummaryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
