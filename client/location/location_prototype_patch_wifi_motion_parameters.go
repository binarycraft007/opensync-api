// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLocationPrototypePatchWifiMotionParams creates a new LocationPrototypePatchWifiMotionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypePatchWifiMotionParams() *LocationPrototypePatchWifiMotionParams {
	return &LocationPrototypePatchWifiMotionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypePatchWifiMotionParamsWithTimeout creates a new LocationPrototypePatchWifiMotionParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypePatchWifiMotionParamsWithTimeout(timeout time.Duration) *LocationPrototypePatchWifiMotionParams {
	return &LocationPrototypePatchWifiMotionParams{
		timeout: timeout,
	}
}

// NewLocationPrototypePatchWifiMotionParamsWithContext creates a new LocationPrototypePatchWifiMotionParams object
// with the ability to set a context for a request.
func NewLocationPrototypePatchWifiMotionParamsWithContext(ctx context.Context) *LocationPrototypePatchWifiMotionParams {
	return &LocationPrototypePatchWifiMotionParams{
		Context: ctx,
	}
}

// NewLocationPrototypePatchWifiMotionParamsWithHTTPClient creates a new LocationPrototypePatchWifiMotionParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypePatchWifiMotionParamsWithHTTPClient(client *http.Client) *LocationPrototypePatchWifiMotionParams {
	return &LocationPrototypePatchWifiMotionParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypePatchWifiMotionParams contains all the parameters to send to the API endpoint

	for the location prototype patch wifi motion operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypePatchWifiMotionParams struct {

	// Auto.
	Auto bool

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype patch wifi motion params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypePatchWifiMotionParams) WithDefaults() *LocationPrototypePatchWifiMotionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype patch wifi motion params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypePatchWifiMotionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) WithTimeout(timeout time.Duration) *LocationPrototypePatchWifiMotionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) WithContext(ctx context.Context) *LocationPrototypePatchWifiMotionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) WithHTTPClient(client *http.Client) *LocationPrototypePatchWifiMotionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuto adds the auto to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) WithAuto(auto bool) *LocationPrototypePatchWifiMotionParams {
	o.SetAuto(auto)
	return o
}

// SetAuto adds the auto to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) SetAuto(auto bool) {
	o.Auto = auto
}

// WithID adds the id to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) WithID(id string) *LocationPrototypePatchWifiMotionParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype patch wifi motion params
func (o *LocationPrototypePatchWifiMotionParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypePatchWifiMotionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param auto
	frAuto := o.Auto
	fAuto := swag.FormatBool(frAuto)
	if fAuto != "" {
		if err := r.SetFormParam("auto", fAuto); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
