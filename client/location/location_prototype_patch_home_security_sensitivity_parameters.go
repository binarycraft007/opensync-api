// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLocationPrototypePatchHomeSecuritySensitivityParams creates a new LocationPrototypePatchHomeSecuritySensitivityParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypePatchHomeSecuritySensitivityParams() *LocationPrototypePatchHomeSecuritySensitivityParams {
	return &LocationPrototypePatchHomeSecuritySensitivityParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypePatchHomeSecuritySensitivityParamsWithTimeout creates a new LocationPrototypePatchHomeSecuritySensitivityParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypePatchHomeSecuritySensitivityParamsWithTimeout(timeout time.Duration) *LocationPrototypePatchHomeSecuritySensitivityParams {
	return &LocationPrototypePatchHomeSecuritySensitivityParams{
		timeout: timeout,
	}
}

// NewLocationPrototypePatchHomeSecuritySensitivityParamsWithContext creates a new LocationPrototypePatchHomeSecuritySensitivityParams object
// with the ability to set a context for a request.
func NewLocationPrototypePatchHomeSecuritySensitivityParamsWithContext(ctx context.Context) *LocationPrototypePatchHomeSecuritySensitivityParams {
	return &LocationPrototypePatchHomeSecuritySensitivityParams{
		Context: ctx,
	}
}

// NewLocationPrototypePatchHomeSecuritySensitivityParamsWithHTTPClient creates a new LocationPrototypePatchHomeSecuritySensitivityParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypePatchHomeSecuritySensitivityParamsWithHTTPClient(client *http.Client) *LocationPrototypePatchHomeSecuritySensitivityParams {
	return &LocationPrototypePatchHomeSecuritySensitivityParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypePatchHomeSecuritySensitivityParams contains all the parameters to send to the API endpoint

	for the location prototype patch home security sensitivity operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypePatchHomeSecuritySensitivityParams struct {

	/* Cooldown.

	   sets required rest period for motion detected events to end, in seconds

	   Format: double
	*/
	Cooldown *float64

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	/* PetMode.

	   adjusts sensitivity of motion detected events for pets; must be one of "none", "under10", "10to30", "over30" and can only be set if sensitivity = high
	*/
	PetMode *string

	/* Sensitivity.

	   adjusts sensitivity of motion detected events; must be one of "low", "medium", "high"
	*/
	Sensitivity *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype patch home security sensitivity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithDefaults() *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype patch home security sensitivity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithTimeout(timeout time.Duration) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithContext(ctx context.Context) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithHTTPClient(client *http.Client) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCooldown adds the cooldown to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithCooldown(cooldown *float64) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetCooldown(cooldown)
	return o
}

// SetCooldown adds the cooldown to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetCooldown(cooldown *float64) {
	o.Cooldown = cooldown
}

// WithID adds the id to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithID(id string) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetID(id string) {
	o.ID = id
}

// WithPetMode adds the petMode to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithPetMode(petMode *string) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetPetMode(petMode)
	return o
}

// SetPetMode adds the petMode to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetPetMode(petMode *string) {
	o.PetMode = petMode
}

// WithSensitivity adds the sensitivity to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WithSensitivity(sensitivity *string) *LocationPrototypePatchHomeSecuritySensitivityParams {
	o.SetSensitivity(sensitivity)
	return o
}

// SetSensitivity adds the sensitivity to the location prototype patch home security sensitivity params
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) SetSensitivity(sensitivity *string) {
	o.Sensitivity = sensitivity
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypePatchHomeSecuritySensitivityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cooldown != nil {

		// form param cooldown
		var frCooldown float64
		if o.Cooldown != nil {
			frCooldown = *o.Cooldown
		}
		fCooldown := swag.FormatFloat64(frCooldown)
		if fCooldown != "" {
			if err := r.SetFormParam("cooldown", fCooldown); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.PetMode != nil {

		// form param petMode
		var frPetMode string
		if o.PetMode != nil {
			frPetMode = *o.PetMode
		}
		fPetMode := frPetMode
		if fPetMode != "" {
			if err := r.SetFormParam("petMode", fPetMode); err != nil {
				return err
			}
		}
	}

	if o.Sensitivity != nil {

		// form param sensitivity
		var frSensitivity string
		if o.Sensitivity != nil {
			frSensitivity = *o.Sensitivity
		}
		fSensitivity := frSensitivity
		if fSensitivity != "" {
			if err := r.SetFormParam("sensitivity", fSensitivity); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
