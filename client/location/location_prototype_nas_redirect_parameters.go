// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLocationPrototypeNasRedirectParams creates a new LocationPrototypeNasRedirectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypeNasRedirectParams() *LocationPrototypeNasRedirectParams {
	return &LocationPrototypeNasRedirectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypeNasRedirectParamsWithTimeout creates a new LocationPrototypeNasRedirectParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypeNasRedirectParamsWithTimeout(timeout time.Duration) *LocationPrototypeNasRedirectParams {
	return &LocationPrototypeNasRedirectParams{
		timeout: timeout,
	}
}

// NewLocationPrototypeNasRedirectParamsWithContext creates a new LocationPrototypeNasRedirectParams object
// with the ability to set a context for a request.
func NewLocationPrototypeNasRedirectParamsWithContext(ctx context.Context) *LocationPrototypeNasRedirectParams {
	return &LocationPrototypeNasRedirectParams{
		Context: ctx,
	}
}

// NewLocationPrototypeNasRedirectParamsWithHTTPClient creates a new LocationPrototypeNasRedirectParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypeNasRedirectParamsWithHTTPClient(client *http.Client) *LocationPrototypeNasRedirectParams {
	return &LocationPrototypeNasRedirectParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypeNasRedirectParams contains all the parameters to send to the API endpoint

	for the location prototype nas redirect operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypeNasRedirectParams struct {

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	/* NodeMac.

	   gateway MAC address
	*/
	NodeMac string

	/* Proxy.

	   client IP address
	*/
	Proxy string

	/* ProxyMac.

	   client MAC address
	*/
	ProxyMac string

	/* Ssid.

	   guest SSID client is attempting to join
	*/
	Ssid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype nas redirect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeNasRedirectParams) WithDefaults() *LocationPrototypeNasRedirectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype nas redirect params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeNasRedirectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithTimeout(timeout time.Duration) *LocationPrototypeNasRedirectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithContext(ctx context.Context) *LocationPrototypeNasRedirectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithHTTPClient(client *http.Client) *LocationPrototypeNasRedirectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithID(id string) *LocationPrototypeNasRedirectParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetID(id string) {
	o.ID = id
}

// WithNodeMac adds the nodeMac to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithNodeMac(nodeMac string) *LocationPrototypeNasRedirectParams {
	o.SetNodeMac(nodeMac)
	return o
}

// SetNodeMac adds the nodeMac to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetNodeMac(nodeMac string) {
	o.NodeMac = nodeMac
}

// WithProxy adds the proxy to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithProxy(proxy string) *LocationPrototypeNasRedirectParams {
	o.SetProxy(proxy)
	return o
}

// SetProxy adds the proxy to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetProxy(proxy string) {
	o.Proxy = proxy
}

// WithProxyMac adds the proxyMac to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithProxyMac(proxyMac string) *LocationPrototypeNasRedirectParams {
	o.SetProxyMac(proxyMac)
	return o
}

// SetProxyMac adds the proxyMac to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetProxyMac(proxyMac string) {
	o.ProxyMac = proxyMac
}

// WithSsid adds the ssid to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) WithSsid(ssid string) *LocationPrototypeNasRedirectParams {
	o.SetSsid(ssid)
	return o
}

// SetSsid adds the ssid to the location prototype nas redirect params
func (o *LocationPrototypeNasRedirectParams) SetSsid(ssid string) {
	o.Ssid = ssid
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypeNasRedirectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// query param nodeMac
	qrNodeMac := o.NodeMac
	qNodeMac := qrNodeMac
	if qNodeMac != "" {

		if err := r.SetQueryParam("nodeMac", qNodeMac); err != nil {
			return err
		}
	}

	// query param proxy
	qrProxy := o.Proxy
	qProxy := qrProxy
	if qProxy != "" {

		if err := r.SetQueryParam("proxy", qProxy); err != nil {
			return err
		}
	}

	// query param proxyMac
	qrProxyMac := o.ProxyMac
	qProxyMac := qrProxyMac
	if qProxyMac != "" {

		if err := r.SetQueryParam("proxyMac", qProxyMac); err != nil {
			return err
		}
	}

	// query param ssid
	qrSsid := o.Ssid
	qSsid := qrSsid
	if qSsid != "" {

		if err := r.SetQueryParam("ssid", qSsid); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
