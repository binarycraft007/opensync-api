// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// LocationPrototypeGetHomeSecurityReader is a Reader for the LocationPrototypeGetHomeSecurity structure.
type LocationPrototypeGetHomeSecurityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocationPrototypeGetHomeSecurityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLocationPrototypeGetHomeSecurityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewLocationPrototypeGetHomeSecurityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLocationPrototypeGetHomeSecurityOK creates a LocationPrototypeGetHomeSecurityOK with default headers values
func NewLocationPrototypeGetHomeSecurityOK() *LocationPrototypeGetHomeSecurityOK {
	return &LocationPrototypeGetHomeSecurityOK{}
}

/*
LocationPrototypeGetHomeSecurityOK describes a response with status code 200, with default header values.

Request was successful
*/
type LocationPrototypeGetHomeSecurityOK struct {
	Payload *models.HomeSecurity
}

// IsSuccess returns true when this location prototype get home security o k response has a 2xx status code
func (o *LocationPrototypeGetHomeSecurityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this location prototype get home security o k response has a 3xx status code
func (o *LocationPrototypeGetHomeSecurityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this location prototype get home security o k response has a 4xx status code
func (o *LocationPrototypeGetHomeSecurityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this location prototype get home security o k response has a 5xx status code
func (o *LocationPrototypeGetHomeSecurityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this location prototype get home security o k response a status code equal to that given
func (o *LocationPrototypeGetHomeSecurityOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the location prototype get home security o k response
func (o *LocationPrototypeGetHomeSecurityOK) Code() int {
	return 200
}

func (o *LocationPrototypeGetHomeSecurityOK) Error() string {
	return fmt.Sprintf("[GET /Locations/{id}/homeSecurity][%d] locationPrototypeGetHomeSecurityOK  %+v", 200, o.Payload)
}

func (o *LocationPrototypeGetHomeSecurityOK) String() string {
	return fmt.Sprintf("[GET /Locations/{id}/homeSecurity][%d] locationPrototypeGetHomeSecurityOK  %+v", 200, o.Payload)
}

func (o *LocationPrototypeGetHomeSecurityOK) GetPayload() *models.HomeSecurity {
	return o.Payload
}

func (o *LocationPrototypeGetHomeSecurityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HomeSecurity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocationPrototypeGetHomeSecurityDefault creates a LocationPrototypeGetHomeSecurityDefault with default headers values
func NewLocationPrototypeGetHomeSecurityDefault(code int) *LocationPrototypeGetHomeSecurityDefault {
	return &LocationPrototypeGetHomeSecurityDefault{
		_statusCode: code,
	}
}

/*
LocationPrototypeGetHomeSecurityDefault describes a response with status code -1, with default header values.

unexpected error
*/
type LocationPrototypeGetHomeSecurityDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this location prototype get home security default response has a 2xx status code
func (o *LocationPrototypeGetHomeSecurityDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this location prototype get home security default response has a 3xx status code
func (o *LocationPrototypeGetHomeSecurityDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this location prototype get home security default response has a 4xx status code
func (o *LocationPrototypeGetHomeSecurityDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this location prototype get home security default response has a 5xx status code
func (o *LocationPrototypeGetHomeSecurityDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this location prototype get home security default response a status code equal to that given
func (o *LocationPrototypeGetHomeSecurityDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the location prototype get home security default response
func (o *LocationPrototypeGetHomeSecurityDefault) Code() int {
	return o._statusCode
}

func (o *LocationPrototypeGetHomeSecurityDefault) Error() string {
	return fmt.Sprintf("[GET /Locations/{id}/homeSecurity][%d] Location.prototype.getHomeSecurity default  %+v", o._statusCode, o.Payload)
}

func (o *LocationPrototypeGetHomeSecurityDefault) String() string {
	return fmt.Sprintf("[GET /Locations/{id}/homeSecurity][%d] Location.prototype.getHomeSecurity default  %+v", o._statusCode, o.Payload)
}

func (o *LocationPrototypeGetHomeSecurityDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *LocationPrototypeGetHomeSecurityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
