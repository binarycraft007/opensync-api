// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLocationPrototypeGetForceGraphParams creates a new LocationPrototypeGetForceGraphParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypeGetForceGraphParams() *LocationPrototypeGetForceGraphParams {
	return &LocationPrototypeGetForceGraphParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypeGetForceGraphParamsWithTimeout creates a new LocationPrototypeGetForceGraphParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypeGetForceGraphParamsWithTimeout(timeout time.Duration) *LocationPrototypeGetForceGraphParams {
	return &LocationPrototypeGetForceGraphParams{
		timeout: timeout,
	}
}

// NewLocationPrototypeGetForceGraphParamsWithContext creates a new LocationPrototypeGetForceGraphParams object
// with the ability to set a context for a request.
func NewLocationPrototypeGetForceGraphParamsWithContext(ctx context.Context) *LocationPrototypeGetForceGraphParams {
	return &LocationPrototypeGetForceGraphParams{
		Context: ctx,
	}
}

// NewLocationPrototypeGetForceGraphParamsWithHTTPClient creates a new LocationPrototypeGetForceGraphParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypeGetForceGraphParamsWithHTTPClient(client *http.Client) *LocationPrototypeGetForceGraphParams {
	return &LocationPrototypeGetForceGraphParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypeGetForceGraphParams contains all the parameters to send to the API endpoint

	for the location prototype get force graph operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypeGetForceGraphParams struct {

	// AllSSIDs.
	AllSSIDs *bool

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	// ShowPartnerComponent.
	ShowPartnerComponent *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype get force graph params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeGetForceGraphParams) WithDefaults() *LocationPrototypeGetForceGraphParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype get force graph params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeGetForceGraphParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithTimeout(timeout time.Duration) *LocationPrototypeGetForceGraphParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithContext(ctx context.Context) *LocationPrototypeGetForceGraphParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithHTTPClient(client *http.Client) *LocationPrototypeGetForceGraphParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllSSIDs adds the allSSIDs to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithAllSSIDs(allSSIDs *bool) *LocationPrototypeGetForceGraphParams {
	o.SetAllSSIDs(allSSIDs)
	return o
}

// SetAllSSIDs adds the allSSIDs to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetAllSSIDs(allSSIDs *bool) {
	o.AllSSIDs = allSSIDs
}

// WithID adds the id to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithID(id string) *LocationPrototypeGetForceGraphParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetID(id string) {
	o.ID = id
}

// WithShowPartnerComponent adds the showPartnerComponent to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) WithShowPartnerComponent(showPartnerComponent *bool) *LocationPrototypeGetForceGraphParams {
	o.SetShowPartnerComponent(showPartnerComponent)
	return o
}

// SetShowPartnerComponent adds the showPartnerComponent to the location prototype get force graph params
func (o *LocationPrototypeGetForceGraphParams) SetShowPartnerComponent(showPartnerComponent *bool) {
	o.ShowPartnerComponent = showPartnerComponent
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypeGetForceGraphParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllSSIDs != nil {

		// query param allSSIDs
		var qrAllSSIDs bool

		if o.AllSSIDs != nil {
			qrAllSSIDs = *o.AllSSIDs
		}
		qAllSSIDs := swag.FormatBool(qrAllSSIDs)
		if qAllSSIDs != "" {

			if err := r.SetQueryParam("allSSIDs", qAllSSIDs); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.ShowPartnerComponent != nil {

		// query param showPartnerComponent
		var qrShowPartnerComponent bool

		if o.ShowPartnerComponent != nil {
			qrShowPartnerComponent = *o.ShowPartnerComponent
		}
		qShowPartnerComponent := swag.FormatBool(qrShowPartnerComponent)
		if qShowPartnerComponent != "" {

			if err := r.SetQueryParam("showPartnerComponent", qShowPartnerComponent); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
