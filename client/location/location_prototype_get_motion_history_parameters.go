// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLocationPrototypeGetMotionHistoryParams creates a new LocationPrototypeGetMotionHistoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypeGetMotionHistoryParams() *LocationPrototypeGetMotionHistoryParams {
	return &LocationPrototypeGetMotionHistoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypeGetMotionHistoryParamsWithTimeout creates a new LocationPrototypeGetMotionHistoryParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypeGetMotionHistoryParamsWithTimeout(timeout time.Duration) *LocationPrototypeGetMotionHistoryParams {
	return &LocationPrototypeGetMotionHistoryParams{
		timeout: timeout,
	}
}

// NewLocationPrototypeGetMotionHistoryParamsWithContext creates a new LocationPrototypeGetMotionHistoryParams object
// with the ability to set a context for a request.
func NewLocationPrototypeGetMotionHistoryParamsWithContext(ctx context.Context) *LocationPrototypeGetMotionHistoryParams {
	return &LocationPrototypeGetMotionHistoryParams{
		Context: ctx,
	}
}

// NewLocationPrototypeGetMotionHistoryParamsWithHTTPClient creates a new LocationPrototypeGetMotionHistoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypeGetMotionHistoryParamsWithHTTPClient(client *http.Client) *LocationPrototypeGetMotionHistoryParams {
	return &LocationPrototypeGetMotionHistoryParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypeGetMotionHistoryParams contains all the parameters to send to the API endpoint

	for the location prototype get motion history operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypeGetMotionHistoryParams struct {

	/* Bucket.

	     number of seconds
	in density calculation window; returned data points represent % of non-zero intensity values in the window

	     Format: double
	     Default: 3600
	*/
	Bucket *float64

	/* From.

	   UTC unix ts

	   Format: double
	*/
	From *float64

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	/* To.

	   UTC unix ts, defaults to now

	   Format: double
	*/
	To *float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype get motion history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeGetMotionHistoryParams) WithDefaults() *LocationPrototypeGetMotionHistoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype get motion history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeGetMotionHistoryParams) SetDefaults() {
	var (
		bucketDefault = float64(3600)
	)

	val := LocationPrototypeGetMotionHistoryParams{
		Bucket: &bucketDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithTimeout(timeout time.Duration) *LocationPrototypeGetMotionHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithContext(ctx context.Context) *LocationPrototypeGetMotionHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithHTTPClient(client *http.Client) *LocationPrototypeGetMotionHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBucket adds the bucket to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithBucket(bucket *float64) *LocationPrototypeGetMotionHistoryParams {
	o.SetBucket(bucket)
	return o
}

// SetBucket adds the bucket to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetBucket(bucket *float64) {
	o.Bucket = bucket
}

// WithFrom adds the from to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithFrom(from *float64) *LocationPrototypeGetMotionHistoryParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetFrom(from *float64) {
	o.From = from
}

// WithID adds the id to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithID(id string) *LocationPrototypeGetMotionHistoryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetID(id string) {
	o.ID = id
}

// WithTo adds the to to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) WithTo(to *float64) *LocationPrototypeGetMotionHistoryParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the location prototype get motion history params
func (o *LocationPrototypeGetMotionHistoryParams) SetTo(to *float64) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypeGetMotionHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Bucket != nil {

		// query param bucket
		var qrBucket float64

		if o.Bucket != nil {
			qrBucket = *o.Bucket
		}
		qBucket := swag.FormatFloat64(qrBucket)
		if qBucket != "" {

			if err := r.SetQueryParam("bucket", qBucket); err != nil {
				return err
			}
		}
	}

	if o.From != nil {

		// query param from
		var qrFrom float64

		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := swag.FormatFloat64(qrFrom)
		if qFrom != "" {

			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.To != nil {

		// query param to
		var qrTo float64

		if o.To != nil {
			qrTo = *o.To
		}
		qTo := swag.FormatFloat64(qrTo)
		if qTo != "" {

			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
