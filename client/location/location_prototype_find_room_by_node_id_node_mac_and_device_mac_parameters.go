// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams creates a new LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams() *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	return &LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithTimeout creates a new LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams object
// with the ability to set a timeout on a request.
func NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithTimeout(timeout time.Duration) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	return &LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams{
		timeout: timeout,
	}
}

// NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithContext creates a new LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams object
// with the ability to set a context for a request.
func NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithContext(ctx context.Context) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	return &LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams{
		Context: ctx,
	}
}

// NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithHTTPClient creates a new LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams object
// with the ability to set a custom HTTPClient for a request.
func NewLocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParamsWithHTTPClient(client *http.Client) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	return &LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams{
		HTTPClient: client,
	}
}

/*
LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams contains all the parameters to send to the API endpoint

	for the location prototype find room by node Id node mac and device mac operation.

	Typically these are written to a http.Request.
*/
type LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams struct {

	/* ID.

	   Location id

	   Format: JSON
	*/
	ID string

	/* Search.

	   Node ID (Serial Number), Node WiFi Radio Mac, or Device Mac
	*/
	Search string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the location prototype find room by node Id node mac and device mac params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithDefaults() *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the location prototype find room by node Id node mac and device mac params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithTimeout(timeout time.Duration) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithContext(ctx context.Context) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithHTTPClient(client *http.Client) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithID(id string) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetID(id string) {
	o.ID = id
}

// WithSearch adds the search to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WithSearch(search string) *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the location prototype find room by node Id node mac and device mac params
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) SetSearch(search string) {
	o.Search = search
}

// WriteToRequest writes these params to a swagger request
func (o *LocationPrototypeFindRoomByNodeIDNodeMacAndDeviceMacParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param search
	if err := r.SetPathParam("search", o.Search); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
