// Code generated by go-swagger; DO NOT EDIT.

package partner_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// PartnerConfigPatchWorkpassCustomerSupportConfigurationsReader is a Reader for the PartnerConfigPatchWorkpassCustomerSupportConfigurations structure.
type PartnerConfigPatchWorkpassCustomerSupportConfigurationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsOK creates a PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK with default headers values
func NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsOK() *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK {
	return &PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK{}
}

/*
PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK describes a response with status code 200, with default header values.

Request was successful
*/
type PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK struct {
	Payload models.XAny
}

// IsSuccess returns true when this partner config patch workpass customer support configurations o k response has a 2xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this partner config patch workpass customer support configurations o k response has a 3xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner config patch workpass customer support configurations o k response has a 4xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner config patch workpass customer support configurations o k response has a 5xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this partner config patch workpass customer support configurations o k response a status code equal to that given
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the partner config patch workpass customer support configurations o k response
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) Code() int {
	return 200
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) Error() string {
	return fmt.Sprintf("[PATCH /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] partnerConfigPatchWorkpassCustomerSupportConfigurationsOK  %+v", 200, o.Payload)
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) String() string {
	return fmt.Sprintf("[PATCH /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] partnerConfigPatchWorkpassCustomerSupportConfigurationsOK  %+v", 200, o.Payload)
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) GetPayload() models.XAny {
	return o.Payload
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault creates a PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault with default headers values
func NewPartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault(code int) *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault {
	return &PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault{
		_statusCode: code,
	}
}

/*
PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this partner config patch workpass customer support configurations default response has a 2xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this partner config patch workpass customer support configurations default response has a 3xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this partner config patch workpass customer support configurations default response has a 4xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this partner config patch workpass customer support configurations default response has a 5xx status code
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this partner config patch workpass customer support configurations default response a status code equal to that given
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the partner config patch workpass customer support configurations default response
func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) Code() int {
	return o._statusCode
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) Error() string {
	return fmt.Sprintf("[PATCH /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] PartnerConfig.patchWorkpassCustomerSupportConfigurations default  %+v", o._statusCode, o.Payload)
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) String() string {
	return fmt.Sprintf("[PATCH /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] PartnerConfig.patchWorkpassCustomerSupportConfigurations default  %+v", o._statusCode, o.Payload)
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *PartnerConfigPatchWorkpassCustomerSupportConfigurationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
