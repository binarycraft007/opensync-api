// Code generated by go-swagger; DO NOT EDIT.

package partner_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/opensync-api/models"
)

// PartnerConfigGetWorkpassCustomerSupportConfigurationsReader is a Reader for the PartnerConfigGetWorkpassCustomerSupportConfigurations structure.
type PartnerConfigGetWorkpassCustomerSupportConfigurationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPartnerConfigGetWorkpassCustomerSupportConfigurationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPartnerConfigGetWorkpassCustomerSupportConfigurationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPartnerConfigGetWorkpassCustomerSupportConfigurationsOK creates a PartnerConfigGetWorkpassCustomerSupportConfigurationsOK with default headers values
func NewPartnerConfigGetWorkpassCustomerSupportConfigurationsOK() *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK {
	return &PartnerConfigGetWorkpassCustomerSupportConfigurationsOK{}
}

/*
PartnerConfigGetWorkpassCustomerSupportConfigurationsOK describes a response with status code 200, with default header values.

Request was successful
*/
type PartnerConfigGetWorkpassCustomerSupportConfigurationsOK struct {
	Payload *models.WorkpassCustomerSupportConfigurations
}

// IsSuccess returns true when this partner config get workpass customer support configurations o k response has a 2xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this partner config get workpass customer support configurations o k response has a 3xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner config get workpass customer support configurations o k response has a 4xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner config get workpass customer support configurations o k response has a 5xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this partner config get workpass customer support configurations o k response a status code equal to that given
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the partner config get workpass customer support configurations o k response
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) Code() int {
	return 200
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) Error() string {
	return fmt.Sprintf("[GET /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] partnerConfigGetWorkpassCustomerSupportConfigurationsOK  %+v", 200, o.Payload)
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) String() string {
	return fmt.Sprintf("[GET /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] partnerConfigGetWorkpassCustomerSupportConfigurationsOK  %+v", 200, o.Payload)
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) GetPayload() *models.WorkpassCustomerSupportConfigurations {
	return o.Payload
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkpassCustomerSupportConfigurations)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerConfigGetWorkpassCustomerSupportConfigurationsDefault creates a PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault with default headers values
func NewPartnerConfigGetWorkpassCustomerSupportConfigurationsDefault(code int) *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault {
	return &PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault{
		_statusCode: code,
	}
}

/*
PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault describes a response with status code -1, with default header values.

unexpected error
*/
type PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this partner config get workpass customer support configurations default response has a 2xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this partner config get workpass customer support configurations default response has a 3xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this partner config get workpass customer support configurations default response has a 4xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this partner config get workpass customer support configurations default response has a 5xx status code
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this partner config get workpass customer support configurations default response a status code equal to that given
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the partner config get workpass customer support configurations default response
func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) Code() int {
	return o._statusCode
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) Error() string {
	return fmt.Sprintf("[GET /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] PartnerConfig.getWorkpassCustomerSupportConfigurations default  %+v", o._statusCode, o.Payload)
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) String() string {
	return fmt.Sprintf("[GET /partnerConfig/{id}/workpass/customerSupportConfigurations][%d] PartnerConfig.getWorkpassCustomerSupportConfigurations default  %+v", o._statusCode, o.Payload)
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *PartnerConfigGetWorkpassCustomerSupportConfigurationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
