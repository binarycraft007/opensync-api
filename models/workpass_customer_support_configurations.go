// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WorkpassCustomerSupportConfigurations workpass customer support configurations
//
// swagger:model workpassCustomerSupportConfigurations
type WorkpassCustomerSupportConfigurations struct {

	// add pod enabled
	AddPodEnabled *bool `json:"addPodEnabled,omitempty"`

	// android store application Url
	AndroidStoreApplicationURL string `json:"androidStoreApplicationUrl,omitempty"`

	// autorun speedtest toggle enabled
	AutorunSpeedtestToggleEnabled *bool `json:"autorunSpeedtestToggleEnabled,omitempty"`

	// buy pod enabled
	BuyPodEnabled *bool `json:"buyPodEnabled,omitempty"`

	// call us display phone number
	CallUsDisplayPhoneNumber string `json:"callUsDisplayPhoneNumber,omitempty"`

	// call us enabled
	CallUsEnabled *bool `json:"callUsEnabled,omitempty"`

	// call us phone number
	CallUsPhoneNumber string `json:"callUsPhoneNumber,omitempty"`

	// captive portal guest email download disabled
	CaptivePortalGuestEmailDownloadDisabled *bool `json:"captivePortalGuestEmailDownloadDisabled,omitempty"`

	// chat support enabled
	ChatSupportEnabled *bool `json:"chatSupportEnabled,omitempty"`

	// chat support Url
	ChatSupportURL string `json:"chatSupportUrl,omitempty"`

	// contact us email
	ContactUsEmail string `json:"contactUsEmail,omitempty"`

	// contact us enabled
	ContactUsEnabled *bool `json:"contactUsEnabled,omitempty"`

	// display custom logo enabled
	DisplayCustomLogoEnabled *bool `json:"displayCustomLogoEnabled,omitempty"`

	// faq enabled
	FaqEnabled *bool `json:"faqEnabled,omitempty"`

	// faq Url
	FaqURL string `json:"faqUrl,omitempty"`

	// hide isp name enabled
	HideIspNameEnabled *bool `json:"hideIspNameEnabled,omitempty"`

	// id
	ID ObjectID `json:"id,omitempty"`

	// ios store application Url
	IosStoreApplicationURL string `json:"iosStoreApplicationUrl,omitempty"`

	// logo resource
	LogoResource string `json:"logoResource,omitempty"`

	// manage account enabled
	ManageAccountEnabled *bool `json:"manageAccountEnabled,omitempty"`

	// manage your data enabled
	ManageYourDataEnabled *bool `json:"manageYourDataEnabled,omitempty"`

	// manage your data Url
	ManageYourDataURL string `json:"manageYourDataUrl,omitempty"`

	// mobile custom deeplink enabled
	MobileCustomDeeplinkEnabled *bool `json:"mobileCustomDeeplinkEnabled,omitempty"`

	// mobile custom deeplink Url
	MobileCustomDeeplinkURL string `json:"mobileCustomDeeplinkUrl,omitempty"`

	// multilocation enabled
	MultilocationEnabled *bool `json:"multilocationEnabled,omitempty"`

	// partner account enabled
	PartnerAccountEnabled *bool `json:"partnerAccountEnabled,omitempty"`

	// partner account Url
	PartnerAccountURL string `json:"partnerAccountUrl,omitempty"`

	// partner buy pod Url
	PartnerBuyPodURL string `json:"partnerBuyPodUrl,omitempty"`

	// partner buy pod Url enabled
	PartnerBuyPodURLEnabled *bool `json:"partnerBuyPodUrlEnabled,omitempty"`

	// plume account Url
	PlumeAccountURL string `json:"plumeAccountUrl,omitempty"`

	// plume buy pod Url
	PlumeBuyPodURL string `json:"plumeBuyPodUrl,omitempty"`

	// privacy enabled
	PrivacyEnabled *bool `json:"privacyEnabled,omitempty"`

	// privacy Url
	PrivacyURL string `json:"privacyUrl,omitempty"`

	// remove gateway enabled
	RemoveGatewayEnabled *bool `json:"removeGatewayEnabled,omitempty"`

	// remove pod enabled
	RemovePodEnabled *bool `json:"removePodEnabled,omitempty"`

	// terms enabled
	TermsEnabled *bool `json:"termsEnabled,omitempty"`

	// terms Url
	TermsURL string `json:"termsUrl,omitempty"`

	// updated at
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updatedAt,omitempty"`

	// webapp Url
	WebappURL *string `json:"webappUrl,omitempty"`

	// work pass webapp disabled
	WorkPassWebappDisabled *bool `json:"workPassWebappDisabled,omitempty"`
}

// Validate validates this workpass customer support configurations
func (m *WorkpassCustomerSupportConfigurations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkpassCustomerSupportConfigurations) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := m.ID.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("id")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("id")
		}
		return err
	}

	return nil
}

func (m *WorkpassCustomerSupportConfigurations) validateUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updatedAt", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this workpass customer support configurations based on the context it is used
func (m *WorkpassCustomerSupportConfigurations) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkpassCustomerSupportConfigurations) contextValidateID(ctx context.Context, formats strfmt.Registry) error {

	if err := m.ID.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("id")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("id")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkpassCustomerSupportConfigurations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkpassCustomerSupportConfigurations) UnmarshalBinary(b []byte) error {
	var res WorkpassCustomerSupportConfigurations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
